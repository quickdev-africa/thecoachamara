
> thecoachamara@0.1.0 dev
> next dev

  â–² Next.js 14.2.32
  - Local:        http://localhost:3000
  - Environments: .env.local

 âœ“ Starting...
 âœ“ Ready in 1757ms
 âœ“ Compiled /api/orders/notify in 430ms (175 modules)
(node:49476) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
 POST /api/orders/notify 200 in 1199ms
 âœ“ Compiled /api/payments in 116ms (175 modules)
Error creating payment: {
  code: 'PGRST204',
  details: null,
  hint: null,
  message: "Could not find the 'createdAt' column of 'payments' in the schema cache"
}
 POST /api/payments 500 in 784ms
 âœ“ Compiled in 96ms (175 modules)
 âœ“ Compiled in 126ms (175 modules)
 âœ“ Compiled /api/orders/notify in 91ms (175 modules)
 POST /api/orders/notify 200 in 726ms
 â—‹ Compiling /admin/payments ...
 â¨¯ ./src/app/admin/payments/page.tsx
Error: 
  [31mx[0m the name `fetchPayments` is defined multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:1:1]
 [2m 1[0m | import React from 'react';
 [2m 2[0m | 
 [2m 3[0m | async function fetchPayments() {
    : [31;1m               ^^^^^^|^^^^^^[0m
    :                      [31;1m`-- [31;1mprevious definition of `fetchPayments` here[0m[0m
 [2m 4[0m |   const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
 [2m 5[0m |   if (!res.ok) throw new Error('Failed to fetch payments');
 [2m 6[0m |   const j = await res.json();
 [2m 7[0m |   return j.data || [];
 [2m 8[0m | }
 [2m 9[0m | 
 [2m10[0m | export default async function AdminPaymentsPage() {
 [2m11[0m |   const payments = await fetchPayments();
 [2m12[0m | 
 [2m13[0m |   return (
 [2m14[0m |     <div className="p-6">
 [2m15[0m |       <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m16[0m |       <div className="overflow-auto">
 [2m17[0m |         <table className="min-w-full table-auto">
 [2m18[0m |           <thead>
 [2m19[0m |             <tr>
 [2m20[0m |               <th className="text-left px-2">Reference</th>
 [2m21[0m |               <th className="text-left px-2">Amount</th>
 [2m22[0m |               <th className="text-left px-2">Method</th>
 [2m23[0m |               <th className="text-left px-2">Status</th>
 [2m24[0m |               <th className="text-left px-2">Order</th>
 [2m25[0m |               <th className="text-left px-2">Created</th>
 [2m26[0m |             </tr>
 [2m27[0m |           </thead>
 [2m28[0m |           <tbody>
 [2m29[0m |             {payments.map((p: any) => (
 [2m30[0m |               <tr key={p.id} className="border-t">
 [2m31[0m |                 <td className="px-2 py-1">{p.reference}</td>
 [2m32[0m |                 <td className="px-2 py-1">{p.amount}</td>
 [2m33[0m |                 <td className="px-2 py-1">{p.payment_method}</td>
 [2m34[0m |                 <td className="px-2 py-1">{p.status}</td>
 [2m35[0m |                 <td className="px-2 py-1">{p.order_id}</td>
 [2m36[0m |                 <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m37[0m |               </tr>
 [2m38[0m |             ))}
 [2m39[0m |           </tbody>
 [2m40[0m |         </table>
 [2m41[0m |       </div>
 [2m42[0m |     </div>
 [2m43[0m |   );
 [2m44[0m | }
 [2m45[0m | "use client";
 [2m46[0m | import { useState, useMemo } from "react";
 [2m47[0m | import { useQuery } from "@tanstack/react-query";
 [2m48[0m | 
 [2m49[0m | const fetchPayments = async (params: Record<string, string>) => {
    : [33;1m      ^^^^^^|^^^^^^[0m
    :             [33;1m`-- [33;1m`fetchPayments` redefined here[0m[0m
 [2m50[0m |   const url = new URL("/api/payments", window.location.origin);
 [2m51[0m |   Object.entries(params).forEach(([k, v]) => v && url.searchParams.set(k, v));
 [2m52[0m |   const response = await fetch(url.toString());
    `----

  [31mx[0m the name `default` is exported multiple times
     ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:7:1]
 [2m  7[0m |       return j.data || [];
 [2m  8[0m |     }
 [2m  9[0m |     
 [2m 10[0m | [31;1m,[0m[31;1m-[0m[31;1m>[0m export default async function AdminPaymentsPage() {
 [2m 11[0m | [31;1m|[0m     const payments = await fetchPayments();
 [2m 12[0m | [31;1m|[0m   
 [2m 13[0m | [31;1m|[0m     return (
 [2m 14[0m | [31;1m|[0m       <div className="p-6">
 [2m 15[0m | [31;1m|[0m         <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 16[0m | [31;1m|[0m         <div className="overflow-auto">
 [2m 17[0m | [31;1m|[0m           <table className="min-w-full table-auto">
 [2m 18[0m | [31;1m|[0m             <thead>
 [2m 19[0m | [31;1m|[0m               <tr>
 [2m 20[0m | [31;1m|[0m                 <th className="text-left px-2">Reference</th>
 [2m 21[0m | [31;1m|[0m                 <th className="text-left px-2">Amount</th>
 [2m 22[0m | [31;1m|[0m                 <th className="text-left px-2">Method</th>
 [2m 23[0m | [31;1m|[0m                 <th className="text-left px-2">Status</th>
 [2m 24[0m | [31;1m|[0m                 <th className="text-left px-2">Order</th>
 [2m 25[0m | [31;1m|[0m                 <th className="text-left px-2">Created</th>
 [2m 26[0m | [31;1m|[0m               </tr>
 [2m 27[0m | [31;1m|[0m             </thead>
 [2m 28[0m | [31;1m|[0m             <tbody>
 [2m 29[0m | [31;1m|[0m               {payments.map((p: any) => (
 [2m 30[0m | [31;1m|[0m                 <tr key={p.id} className="border-t">
 [2m 31[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.reference}</td>
 [2m 32[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.amount}</td>
 [2m 33[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.payment_method}</td>
 [2m 34[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.status}</td>
 [2m 35[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.order_id}</td>
 [2m 36[0m | [31;1m|[0m                   <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m 37[0m | [31;1m|[0m                 </tr>
 [2m 38[0m | [31;1m|[0m               ))}
 [2m 39[0m | [31;1m|[0m             </tbody>
 [2m 40[0m | [31;1m|[0m           </table>
 [2m 41[0m | [31;1m|[0m         </div>
 [2m 42[0m | [31;1m|[0m       </div>
 [2m 43[0m | [31;1m|[0m     );
 [2m 44[0m | [31;1m|[0m[31;1m-[0m[31;1m>[0m }
     : [31;1m`[0m[31;1m---[0m[31;1m-[0m [31;1mprevious exported here[0m
 [2m 45[0m |     "use client";
 [2m 46[0m |     import { useState, useMemo } from "react";
 [2m 47[0m |     import { useQuery } from "@tanstack/react-query";
 [2m 48[0m |     
 [2m 49[0m |     const fetchPayments = async (params: Record<string, string>) => {
 [2m 50[0m |       const url = new URL("/api/payments", window.location.origin);
 [2m 51[0m |       Object.entries(params).forEach(([k, v]) => v && url.searchParams.set(k, v));
 [2m 52[0m |       const response = await fetch(url.toString());
 [2m 53[0m |       if (!response.ok) throw new Error("Failed to fetch payments");
 [2m 54[0m |       const data = await response.json();
 [2m 55[0m |       return Array.isArray(data.data) ? data.data : data;
 [2m 56[0m |     };
 [2m 57[0m |     
 [2m 58[0m | [33;1m,[0m[33;1m-[0m[33;1m>[0m export default function PaymentsPage() {
 [2m 59[0m | [33;1m|[0m     const [filter, setFilter] = useState({ status: "", email: "" });
 [2m 60[0m | [33;1m|[0m     const [search, setSearch] = useState("");
 [2m 61[0m | [33;1m|[0m     const [selected, setSelected] = useState<any>(null);
 [2m 62[0m | [33;1m|[0m   
 [2m 63[0m | [33;1m|[0m     const { data: payments = [], error, isLoading, refetch } = useQuery({
 [2m 64[0m | [33;1m|[0m       queryKey: ["payments", filter, search],
 [2m 65[0m | [33;1m|[0m       queryFn: () => fetchPayments({ ...filter, email: search }),
 [2m 66[0m | [33;1m|[0m     });
 [2m 67[0m | [33;1m|[0m   
 [2m 68[0m | [33;1m|[0m     // Analytics summary
 [2m 69[0m | [33;1m|[0m     const analytics = useMemo(() => {
 [2m 70[0m | [33;1m|[0m       let total = 0, byStatus: Record<string, number> = {}, byMethod: Record<string, number> = {}, topCustomers: Record<string, number> = {};
 [2m 71[0m | [33;1m|[0m       payments.forEach((p: any) => {
 [2m 72[0m | [33;1m|[0m         total += Number(p.amount) || 0;
 [2m 73[0m | [33;1m|[0m         byStatus[p.status] = (byStatus[p.status] || 0) + 1;
 [2m 74[0m | [33;1m|[0m         byMethod[p.method || "other"] = (byMethod[p.method || "other"] || 0) + 1;
 [2m 75[0m | [33;1m|[0m         if (p.email) topCustomers[p.email] = (topCustomers[p.email] || 0) + 1;
 [2m 76[0m | [33;1m|[0m       });
 [2m 77[0m | [33;1m|[0m       const topCustomersArr = Object.entries(topCustomers).sort((a, b) => b[1] - a[1]).slice(0, 3);
 [2m 78[0m | [33;1m|[0m       return { total, byStatus, byMethod, topCustomersArr };
 [2m 79[0m | [33;1m|[0m     }, [payments]);
 [2m 80[0m | [33;1m|[0m   
 [2m 81[0m | [33;1m|[0m     return (
 [2m 82[0m | [33;1m|[0m       <div className="px-1 sm:px-2 md:px-4">
 [2m 83[0m | [33;1m|[0m         <h1 className="text-2xl font-bold mb-2 text-black">Payment Management</h1>
 [2m 84[0m | [33;1m|[0m         {/* Analytics */}
 [2m 85[0m | [33;1m|[0m         <div className="mb-4 grid grid-cols-1 gap-2 sm:gap-4 md:grid-cols-4">
 [2m 86[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m 87[0m | [33;1m|[0m             <div className="text-xs text-gray-500">Total Payments</div>
 [2m 88[0m | [33;1m|[0m             <div className="text-xl font-bold text-green-700">â‚¦{analytics.total.toLocaleString()}</div>
 [2m 89[0m | [33;1m|[0m           </div>
 [2m 90[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m 91[0m | [33;1m|[0m             <div className="text-xs text-gray-500">By Status</div>
 [2m 92[0m | [33;1m|[0m             <ul className="text-sm">
 [2m 93[0m | [33;1m|[0m               {Object.entries(analytics.byStatus).map(([status, count]) => (
 [2m 94[0m | [33;1m|[0m                 <li key={status}><span className="capitalize">{status}</span>: <span className="font-bold">{count}</span></li>
 [2m 95[0m | [33;1m|[0m               ))}
 [2m 96[0m | [33;1m|[0m             </ul>
 [2m 97[0m | [33;1m|[0m           </div>
 [2m 98[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m 99[0m | [33;1m|[0m             <div className="text-xs text-gray-500">By Method</div>
 [2m100[0m | [33;1m|[0m             <ul className="text-sm">
 [2m101[0m | [33;1m|[0m               {Object.entries(analytics.byMethod).map(([method, count]) => (
 [2m102[0m | [33;1m|[0m                 <li key={method}><span className="capitalize">{method}</span>: <span className="font-bold">{count}</span></li>
 [2m103[0m | [33;1m|[0m               ))}
 [2m104[0m | [33;1m|[0m             </ul>
 [2m105[0m | [33;1m|[0m           </div>
 [2m106[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m107[0m | [33;1m|[0m             <div className="text-xs text-gray-500">Top Customers</div>
 [2m108[0m | [33;1m|[0m             <ul className="text-sm">
 [2m109[0m | [33;1m|[0m               {analytics.topCustomersArr.map(([email, count]) => (
 [2m110[0m | [33;1m|[0m                 <li key={email}>{email}: <span className="font-bold">{count}</span></li>
 [2m111[0m | [33;1m|[0m               ))}
 [2m112[0m | [33;1m|[0m             </ul>
 [2m113[0m | [33;1m|[0m           </div>
 [2m114[0m | [33;1m|[0m         </div>
 [2m115[0m | [33;1m|[0m         {/* Filters/Search */}
 [2m116[0m | [33;1m|[0m         <div className="mb-4 flex flex-col gap-2 sm:flex-row sm:gap-4">
 [2m117[0m | [33;1m|[0m           <input
 [2m118[0m | [33;1m|[0m             type="text"
 [2m119[0m | [33;1m|[0m             placeholder="Search by email, reference, or order ID"
 [2m120[0m | [33;1m|[0m             className="border rounded-lg px-3 py-2 text-gray-900 bg-white placeholder:text-gray-400 w-full sm:w-72"
 [2m121[0m | [33;1m|[0m             value={search}
 [2m122[0m | [33;1m|[0m             onChange={e => setSearch(e.target.value)}
 [2m123[0m | [33;1m|[0m           />
 [2m124[0m | [33;1m|[0m           <select
 [2m125[0m | [33;1m|[0m             className="border rounded-lg px-3 py-2 text-gray-900 bg-white w-full sm:w-48"
 [2m126[0m | [33;1m|[0m             value={filter.status}
 [2m127[0m | [33;1m|[0m             onChange={e => setFilter(f => ({ ...f, status: e.target.value }))}
 [2m128[0m | [33;1m|[0m           >
 [2m129[0m | [33;1m|[0m             <option value="">All Statuses</option>
 [2m130[0m | [33;1m|[0m             <option value="pending">Pending</option>
 [2m131[0m | [33;1m|[0m             <option value="success">Success</option>
 [2m132[0m | [33;1m|[0m             <option value="failed">Failed</option>
 [2m133[0m | [33;1m|[0m           </select>
 [2m134[0m | [33;1m|[0m         </div>
 [2m135[0m | [33;1m|[0m         {/* Table */}
 [2m136[0m | [33;1m|[0m         <div className="bg-white rounded-xl shadow p-2 sm:p-4 md:p-6 border border-blue_gray-100 overflow-x-auto">
 [2m137[0m | [33;1m|[0m           {isLoading ? (
 [2m138[0m | [33;1m|[0m             <div className="text-gray-900 text-base">Loading payments...</div>
 [2m139[0m | [33;1m|[0m           ) : error ? (
 [2m140[0m | [33;1m|[0m             <div className="text-red-600 mb-2">Failed to load payments</div>
 [2m141[0m | [33;1m|[0m           ) : payments.length === 0 ? (
 [2m142[0m | [33;1m|[0m             <div className="text-gray-700">No payments found.</div>
 [2m143[0m | [33;1m|[0m           ) : (
 [2m144[0m | [33;1m|[0m             <div className="w-full overflow-x-auto">
 [2m145[0m | [33;1m|[0m               <table className="min-w-[700px] w-full text-left text-sm text-gray-900">
 [2m146[0m | [33;1m|[0m                 <thead>
 [2m147[0m | [33;1m|[0m                   <tr>
 [2m148[0m | [33;1m|[0m                     <th className="py-2 font-bold">Reference</th>
 [2m149[0m | [33;1m|[0m                     <th className="py-2 font-bold">Order</th>
 [2m150[0m | [33;1m|[0m                     <th className="py-2 font-bold">Customer</th>
 [2m151[0m | [33;1m|[0m                     <th className="py-2 font-bold">Amount</th>
 [2m152[0m | [33;1m|[0m                     <th className="py-2 font-bold">Method</th>
 [2m153[0m | [33;1m|[0m                     <th className="py-2 font-bold">Status</th>
 [2m154[0m | [33;1m|[0m                     <th className="py-2 font-bold">Date</th>
 [2m155[0m | [33;1m|[0m                     <th className="py-2 font-bold">Actions</th>
 [2m156[0m | [33;1m|[0m                   </tr>
 [2m157[0m | [33;1m|[0m                 </thead>
 [2m158[0m | [33;1m|[0m                 <tbody>
 [2m159[0m | [33;1m|[0m                   {payments.map((pay: any) => (
 [2m160[0m | [33;1m|[0m                     <tr key={pay.reference} className="border-t">
 [2m161[0m | [33;1m|[0m                       <td className="py-2">{pay.reference}</td>
 [2m162[0m | [33;1m|[0m                       <td className="py-2">
 [2m163[0m | [33;1m|[0m                         {pay.order_id ? (
 [2m164[0m | [33;1m|[0m                           <a href={`/admin/orders?search=${pay.order_id}`} className="underline text-blue-700 hover:text-blue-900" title="View order">{pay.order_id}</a>
 [2m165[0m | [33;1m|[0m                         ) : "-"}
 [2m166[0m | [33;1m|[0m                       </td>
 [2m167[0m | [33;1m|[0m                       <td className="py-2">
 [2m168[0m | [33;1m|[0m                         {pay.email ? (
 [2m169[0m | [33;1m|[0m                           <a href={`/admin/customers?search=${pay.email}`} className="underline text-blue-700 hover:text-blue-900" title="View customer">{pay.email}</a>
 [2m170[0m | [33;1m|[0m                         ) : "-"}
 [2m171[0m | [33;1m|[0m                       </td>
 [2m172[0m | [33;1m|[0m                       <td className="py-2">â‚¦{Number(pay.amount).toLocaleString()}</td>
 [2m173[0m | [33;1m|[0m                       <td className="py-2">{pay.method || "-"}</td>
 [2m174[0m | [33;1m|[0m                       <td className="py-2 capitalize">{pay.status}</td>
 [2m175[0m | [33;1m|[0m                       <td className="py-2">{pay.created_at ? new Date(pay.created_at).toLocaleString() : "-"}</td>
 [2m176[0m | [33;1m|[0m                       <td className="py-2">
 [2m177[0m | [33;1m|[0m                         <button className="underline text-blue-700 hover:text-blue-900" onClick={() => setSelected(pay)}>View</button>
 [2m178[0m | [33;1m|[0m                       </td>
 [2m179[0m | [33;1m|[0m                     </tr>
 [2m180[0m | [33;1m|[0m                   ))}
 [2m181[0m | [33;1m|[0m                 </tbody>
 [2m182[0m | [33;1m|[0m               </table>
 [2m183[0m | [33;1m|[0m             </div>
 [2m184[0m | [33;1m|[0m           )}
 [2m185[0m | [33;1m|[0m         </div>
 [2m186[0m | [33;1m|[0m         {/* Payment Details Modal */}
 [2m187[0m | [33;1m|[0m         {selected && (
 [2m188[0m | [33;1m|[0m           <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 px-2 sm:px-0">
 [2m189[0m | [33;1m|[0m             <div className="bg-white rounded-xl shadow-lg p-2 sm:p-4 md:p-6 w-full max-w-xl relative">
 [2m190[0m | [33;1m|[0m               <button
 [2m191[0m | [33;1m|[0m                 className="absolute top-2 right-2 text-gray-700 hover:text-black text-2xl font-bold"
 [2m192[0m | [33;1m|[0m                 onClick={() => setSelected(null)}
 [2m193[0m | [33;1m|[0m                 aria-label="Close payment details"
 [2m194[0m | [33;1m|[0m               >
 [2m195[0m | [33;1m|[0m                 &times;
 [2m196[0m | [33;1m|[0m               </button>
 [2m197[0m | [33;1m|[0m               <h2 className="text-xl font-bold mb-2 text-black">Payment Details</h2>
 [2m198[0m | [33;1m|[0m               <div className="mb-2 text-gray-900 text-sm sm:text-base">
 [2m199[0m | [33;1m|[0m                 <strong>Reference:</strong> {selected.reference}<br />
 [2m200[0m | [33;1m|[0m                 <strong>Order:</strong> {selected.order_id ? (
 [2m201[0m | [33;1m|[0m                   <a href={`/admin/orders?search=${selected.order_id}`} className="underline text-blue-700 hover:text-blue-900">{selected.order_id}</a>
 [2m202[0m | [33;1m|[0m                 ) : "-"}<br />
 [2m203[0m | [33;1m|[0m                 <strong>Customer:</strong> {selected.email ? (
 [2m204[0m | [33;1m|[0m                   <a href={`/admin/customers?search=${selected.email}`} className="underline text-blue-700 hover:text-blue-900">{selected.email}</a>
 [2m205[0m | [33;1m|[0m                 ) : "-"}<br />
 [2m206[0m | [33;1m|[0m                 <strong>Amount:</strong> â‚¦{Number(selected.amount).toLocaleString()}<br />
 [2m207[0m | [33;1m|[0m                 <strong>Method:</strong> {selected.method || "-"}<br />
 [2m208[0m | [33;1m|[0m                 <strong>Status:</strong> <span className="capitalize">{selected.status}</span><br />
 [2m209[0m | [33;1m|[0m                 <strong>Date:</strong> {selected.created_at ? new Date(selected.created_at).toLocaleString() : "-"}<br />
 [2m210[0m | [33;1m|[0m                 {selected.metadata && (
 [2m211[0m | [33;1m|[0m                   <>
 [2m212[0m | [33;1m|[0m                     <strong>Metadata:</strong> <pre className="bg-gray-100 rounded p-2 text-xs overflow-x-auto">{JSON.stringify(selected.metadata, null, 2)}</pre>
 [2m213[0m | [33;1m|[0m                   </>
 [2m214[0m | [33;1m|[0m                 )}
 [2m215[0m | [33;1m|[0m               </div>
 [2m216[0m | [33;1m|[0m             </div>
 [2m217[0m | [33;1m|[0m           </div>
 [2m218[0m | [33;1m|[0m         )}
 [2m219[0m | [33;1m|[0m       </div>
 [2m220[0m | [33;1m|[0m     );
 [2m221[0m | [33;1m|[0m[33;1m-[0m[33;1m>[0m }
     : [33;1m`[0m[33;1m---[0m[33;1m-[0m [33;1mexported more than once[0m
     `----

Error: 
  [36m>[0m Exported identifiers must be unique

  [31mx[0m The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:42:1]
 [2m42[0m |     </div>
 [2m43[0m |   );
 [2m44[0m | }
 [2m45[0m | "use client";
    : [31;1m^^^^^^^^^^^^^[0m
 [2m46[0m | import { useState, useMemo } from "react";
 [2m47[0m | import { useQuery } from "@tanstack/react-query";
    `----

  [31mx[0m You're importing a component that needs useState. It only works in a Client Component but none of its parents are marked with "use client", so they're Server Components by default.
  [31m|[0m Learn more: https://nextjs.org/docs/getting-started/react-essentials
  [31m|[0m 
  [31m|[0m 
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:43:1]
 [2m43[0m |   );
 [2m44[0m | }
 [2m45[0m | "use client";
 [2m46[0m | import { useState, useMemo } from "react";
    : [31;1m         ^^^^^^^^[0m
 [2m47[0m | import { useQuery } from "@tanstack/react-query";
 [2m48[0m | 
 [2m49[0m | const fetchPayments = async (params: Record<string, string>) => {
    `----

Import trace for requested module:
./src/app/admin/payments/page.tsx
 â¨¯ ./src/app/admin/payments/page.tsx
Error: 
  [31mx[0m the name `fetchPayments` is defined multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:1:1]
 [2m 1[0m | import React from 'react';
 [2m 2[0m | 
 [2m 3[0m | async function fetchPayments() {
    : [31;1m               ^^^^^^|^^^^^^[0m
    :                      [31;1m`-- [31;1mprevious definition of `fetchPayments` here[0m[0m
 [2m 4[0m |   const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
 [2m 5[0m |   if (!res.ok) throw new Error('Failed to fetch payments');
 [2m 6[0m |   const j = await res.json();
 [2m 7[0m |   return j.data || [];
 [2m 8[0m | }
 [2m 9[0m | 
 [2m10[0m | export default async function AdminPaymentsPage() {
 [2m11[0m |   const payments = await fetchPayments();
 [2m12[0m | 
 [2m13[0m |   return (
 [2m14[0m |     <div className="p-6">
 [2m15[0m |       <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m16[0m |       <div className="overflow-auto">
 [2m17[0m |         <table className="min-w-full table-auto">
 [2m18[0m |           <thead>
 [2m19[0m |             <tr>
 [2m20[0m |               <th className="text-left px-2">Reference</th>
 [2m21[0m |               <th className="text-left px-2">Amount</th>
 [2m22[0m |               <th className="text-left px-2">Method</th>
 [2m23[0m |               <th className="text-left px-2">Status</th>
 [2m24[0m |               <th className="text-left px-2">Order</th>
 [2m25[0m |               <th className="text-left px-2">Created</th>
 [2m26[0m |             </tr>
 [2m27[0m |           </thead>
 [2m28[0m |           <tbody>
 [2m29[0m |             {payments.map((p: any) => (
 [2m30[0m |               <tr key={p.id} className="border-t">
 [2m31[0m |                 <td className="px-2 py-1">{p.reference}</td>
 [2m32[0m |                 <td className="px-2 py-1">{p.amount}</td>
 [2m33[0m |                 <td className="px-2 py-1">{p.payment_method}</td>
 [2m34[0m |                 <td className="px-2 py-1">{p.status}</td>
 [2m35[0m |                 <td className="px-2 py-1">{p.order_id}</td>
 [2m36[0m |                 <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m37[0m |               </tr>
 [2m38[0m |             ))}
 [2m39[0m |           </tbody>
 [2m40[0m |         </table>
 [2m41[0m |       </div>
 [2m42[0m |     </div>
 [2m43[0m |   );
 [2m44[0m | }
 [2m45[0m | "use client";
 [2m46[0m | import { useState, useMemo } from "react";
 [2m47[0m | import { useQuery } from "@tanstack/react-query";
 [2m48[0m | 
 [2m49[0m | const fetchPayments = async (params: Record<string, string>) => {
    : [33;1m      ^^^^^^|^^^^^^[0m
    :             [33;1m`-- [33;1m`fetchPayments` redefined here[0m[0m
 [2m50[0m |   const url = new URL("/api/payments", window.location.origin);
 [2m51[0m |   Object.entries(params).forEach(([k, v]) => v && url.searchParams.set(k, v));
 [2m52[0m |   const response = await fetch(url.toString());
    `----

  [31mx[0m the name `default` is exported multiple times
     ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:7:1]
 [2m  7[0m |       return j.data || [];
 [2m  8[0m |     }
 [2m  9[0m |     
 [2m 10[0m | [31;1m,[0m[31;1m-[0m[31;1m>[0m export default async function AdminPaymentsPage() {
 [2m 11[0m | [31;1m|[0m     const payments = await fetchPayments();
 [2m 12[0m | [31;1m|[0m   
 [2m 13[0m | [31;1m|[0m     return (
 [2m 14[0m | [31;1m|[0m       <div className="p-6">
 [2m 15[0m | [31;1m|[0m         <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 16[0m | [31;1m|[0m         <div className="overflow-auto">
 [2m 17[0m | [31;1m|[0m           <table className="min-w-full table-auto">
 [2m 18[0m | [31;1m|[0m             <thead>
 [2m 19[0m | [31;1m|[0m               <tr>
 [2m 20[0m | [31;1m|[0m                 <th className="text-left px-2">Reference</th>
 [2m 21[0m | [31;1m|[0m                 <th className="text-left px-2">Amount</th>
 [2m 22[0m | [31;1m|[0m                 <th className="text-left px-2">Method</th>
 [2m 23[0m | [31;1m|[0m                 <th className="text-left px-2">Status</th>
 [2m 24[0m | [31;1m|[0m                 <th className="text-left px-2">Order</th>
 [2m 25[0m | [31;1m|[0m                 <th className="text-left px-2">Created</th>
 [2m 26[0m | [31;1m|[0m               </tr>
 [2m 27[0m | [31;1m|[0m             </thead>
 [2m 28[0m | [31;1m|[0m             <tbody>
 [2m 29[0m | [31;1m|[0m               {payments.map((p: any) => (
 [2m 30[0m | [31;1m|[0m                 <tr key={p.id} className="border-t">
 [2m 31[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.reference}</td>
 [2m 32[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.amount}</td>
 [2m 33[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.payment_method}</td>
 [2m 34[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.status}</td>
 [2m 35[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.order_id}</td>
 [2m 36[0m | [31;1m|[0m                   <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m 37[0m | [31;1m|[0m                 </tr>
 [2m 38[0m | [31;1m|[0m               ))}
 [2m 39[0m | [31;1m|[0m             </tbody>
 [2m 40[0m | [31;1m|[0m           </table>
 [2m 41[0m | [31;1m|[0m         </div>
 [2m 42[0m | [31;1m|[0m       </div>
 [2m 43[0m | [31;1m|[0m     );
 [2m 44[0m | [31;1m|[0m[31;1m-[0m[31;1m>[0m }
     : [31;1m`[0m[31;1m---[0m[31;1m-[0m [31;1mprevious exported here[0m
 [2m 45[0m |     "use client";
 [2m 46[0m |     import { useState, useMemo } from "react";
 [2m 47[0m |     import { useQuery } from "@tanstack/react-query";
 [2m 48[0m |     
 [2m 49[0m |     const fetchPayments = async (params: Record<string, string>) => {
 [2m 50[0m |       const url = new URL("/api/payments", window.location.origin);
 [2m 51[0m |       Object.entries(params).forEach(([k, v]) => v && url.searchParams.set(k, v));
 [2m 52[0m |       const response = await fetch(url.toString());
 [2m 53[0m |       if (!response.ok) throw new Error("Failed to fetch payments");
 [2m 54[0m |       const data = await response.json();
 [2m 55[0m |       return Array.isArray(data.data) ? data.data : data;
 [2m 56[0m |     };
 [2m 57[0m |     
 [2m 58[0m | [33;1m,[0m[33;1m-[0m[33;1m>[0m export default function PaymentsPage() {
 [2m 59[0m | [33;1m|[0m     const [filter, setFilter] = useState({ status: "", email: "" });
 [2m 60[0m | [33;1m|[0m     const [search, setSearch] = useState("");
 [2m 61[0m | [33;1m|[0m     const [selected, setSelected] = useState<any>(null);
 [2m 62[0m | [33;1m|[0m   
 [2m 63[0m | [33;1m|[0m     const { data: payments = [], error, isLoading, refetch } = useQuery({
 [2m 64[0m | [33;1m|[0m       queryKey: ["payments", filter, search],
 [2m 65[0m | [33;1m|[0m       queryFn: () => fetchPayments({ ...filter, email: search }),
 [2m 66[0m | [33;1m|[0m     });
 [2m 67[0m | [33;1m|[0m   
 [2m 68[0m | [33;1m|[0m     // Analytics summary
 [2m 69[0m | [33;1m|[0m     const analytics = useMemo(() => {
 [2m 70[0m | [33;1m|[0m       let total = 0, byStatus: Record<string, number> = {}, byMethod: Record<string, number> = {}, topCustomers: Record<string, number> = {};
 [2m 71[0m | [33;1m|[0m       payments.forEach((p: any) => {
 [2m 72[0m | [33;1m|[0m         total += Number(p.amount) || 0;
 [2m 73[0m | [33;1m|[0m         byStatus[p.status] = (byStatus[p.status] || 0) + 1;
 [2m 74[0m | [33;1m|[0m         byMethod[p.method || "other"] = (byMethod[p.method || "other"] || 0) + 1;
 [2m 75[0m | [33;1m|[0m         if (p.email) topCustomers[p.email] = (topCustomers[p.email] || 0) + 1;
 [2m 76[0m | [33;1m|[0m       });
 [2m 77[0m | [33;1m|[0m       const topCustomersArr = Object.entries(topCustomers).sort((a, b) => b[1] - a[1]).slice(0, 3);
 [2m 78[0m | [33;1m|[0m       return { total, byStatus, byMethod, topCustomersArr };
 [2m 79[0m | [33;1m|[0m     }, [payments]);
 [2m 80[0m | [33;1m|[0m   
 [2m 81[0m | [33;1m|[0m     return (
 [2m 82[0m | [33;1m|[0m       <div className="px-1 sm:px-2 md:px-4">
 [2m 83[0m | [33;1m|[0m         <h1 className="text-2xl font-bold mb-2 text-black">Payment Management</h1>
 [2m 84[0m | [33;1m|[0m         {/* Analytics */}
 [2m 85[0m | [33;1m|[0m         <div className="mb-4 grid grid-cols-1 gap-2 sm:gap-4 md:grid-cols-4">
 [2m 86[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m 87[0m | [33;1m|[0m             <div className="text-xs text-gray-500">Total Payments</div>
 [2m 88[0m | [33;1m|[0m             <div className="text-xl font-bold text-green-700">â‚¦{analytics.total.toLocaleString()}</div>
 [2m 89[0m | [33;1m|[0m           </div>
 [2m 90[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m 91[0m | [33;1m|[0m             <div className="text-xs text-gray-500">By Status</div>
 [2m 92[0m | [33;1m|[0m             <ul className="text-sm">
 [2m 93[0m | [33;1m|[0m               {Object.entries(analytics.byStatus).map(([status, count]) => (
 [2m 94[0m | [33;1m|[0m                 <li key={status}><span className="capitalize">{status}</span>: <span className="font-bold">{count}</span></li>
 [2m 95[0m | [33;1m|[0m               ))}
 [2m 96[0m | [33;1m|[0m             </ul>
 [2m 97[0m | [33;1m|[0m           </div>
 [2m 98[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m 99[0m | [33;1m|[0m             <div className="text-xs text-gray-500">By Method</div>
 [2m100[0m | [33;1m|[0m             <ul className="text-sm">
 [2m101[0m | [33;1m|[0m               {Object.entries(analytics.byMethod).map(([method, count]) => (
 [2m102[0m | [33;1m|[0m                 <li key={method}><span className="capitalize">{method}</span>: <span className="font-bold">{count}</span></li>
 [2m103[0m | [33;1m|[0m               ))}
 [2m104[0m | [33;1m|[0m             </ul>
 [2m105[0m | [33;1m|[0m           </div>
 [2m106[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m107[0m | [33;1m|[0m             <div className="text-xs text-gray-500">Top Customers</div>
 [2m108[0m | [33;1m|[0m             <ul className="text-sm">
 [2m109[0m | [33;1m|[0m               {analytics.topCustomersArr.map(([email, count]) => (
 [2m110[0m | [33;1m|[0m                 <li key={email}>{email}: <span className="font-bold">{count}</span></li>
 [2m111[0m | [33;1m|[0m               ))}
 [2m112[0m | [33;1m|[0m             </ul>
 [2m113[0m | [33;1m|[0m           </div>
 [2m114[0m | [33;1m|[0m         </div>
 [2m115[0m | [33;1m|[0m         {/* Filters/Search */}
 [2m116[0m | [33;1m|[0m         <div className="mb-4 flex flex-col gap-2 sm:flex-row sm:gap-4">
 [2m117[0m | [33;1m|[0m           <input
 [2m118[0m | [33;1m|[0m             type="text"
 [2m119[0m | [33;1m|[0m             placeholder="Search by email, reference, or order ID"
 [2m120[0m | [33;1m|[0m             className="border rounded-lg px-3 py-2 text-gray-900 bg-white placeholder:text-gray-400 w-full sm:w-72"
 [2m121[0m | [33;1m|[0m             value={search}
 [2m122[0m | [33;1m|[0m             onChange={e => setSearch(e.target.value)}
 [2m123[0m | [33;1m|[0m           />
 [2m124[0m | [33;1m|[0m           <select
 [2m125[0m | [33;1m|[0m             className="border rounded-lg px-3 py-2 text-gray-900 bg-white w-full sm:w-48"
 [2m126[0m | [33;1m|[0m             value={filter.status}
 [2m127[0m | [33;1m|[0m             onChange={e => setFilter(f => ({ ...f, status: e.target.value }))}
 [2m128[0m | [33;1m|[0m           >
 [2m129[0m | [33;1m|[0m             <option value="">All Statuses</option>
 [2m130[0m | [33;1m|[0m             <option value="pending">Pending</option>
 [2m131[0m | [33;1m|[0m             <option value="success">Success</option>
 [2m132[0m | [33;1m|[0m             <option value="failed">Failed</option>
 [2m133[0m | [33;1m|[0m           </select>
 [2m134[0m | [33;1m|[0m         </div>
 [2m135[0m | [33;1m|[0m         {/* Table */}
 [2m136[0m | [33;1m|[0m         <div className="bg-white rounded-xl shadow p-2 sm:p-4 md:p-6 border border-blue_gray-100 overflow-x-auto">
 [2m137[0m | [33;1m|[0m           {isLoading ? (
 [2m138[0m | [33;1m|[0m             <div className="text-gray-900 text-base">Loading payments...</div>
 [2m139[0m | [33;1m|[0m           ) : error ? (
 [2m140[0m | [33;1m|[0m             <div className="text-red-600 mb-2">Failed to load payments</div>
 [2m141[0m | [33;1m|[0m           ) : payments.length === 0 ? (
 [2m142[0m | [33;1m|[0m             <div className="text-gray-700">No payments found.</div>
 [2m143[0m | [33;1m|[0m           ) : (
 [2m144[0m | [33;1m|[0m             <div className="w-full overflow-x-auto">
 [2m145[0m | [33;1m|[0m               <table className="min-w-[700px] w-full text-left text-sm text-gray-900">
 [2m146[0m | [33;1m|[0m                 <thead>
 [2m147[0m | [33;1m|[0m                   <tr>
 [2m148[0m | [33;1m|[0m                     <th className="py-2 font-bold">Reference</th>
 [2m149[0m | [33;1m|[0m                     <th className="py-2 font-bold">Order</th>
 [2m150[0m | [33;1m|[0m                     <th className="py-2 font-bold">Customer</th>
 [2m151[0m | [33;1m|[0m                     <th className="py-2 font-bold">Amount</th>
 [2m152[0m | [33;1m|[0m                     <th className="py-2 font-bold">Method</th>
 [2m153[0m | [33;1m|[0m                     <th className="py-2 font-bold">Status</th>
 [2m154[0m | [33;1m|[0m                     <th className="py-2 font-bold">Date</th>
 [2m155[0m | [33;1m|[0m                     <th className="py-2 font-bold">Actions</th>
 [2m156[0m | [33;1m|[0m                   </tr>
 [2m157[0m | [33;1m|[0m                 </thead>
 [2m158[0m | [33;1m|[0m                 <tbody>
 [2m159[0m | [33;1m|[0m                   {payments.map((pay: any) => (
 [2m160[0m | [33;1m|[0m                     <tr key={pay.reference} className="border-t">
 [2m161[0m | [33;1m|[0m                       <td className="py-2">{pay.reference}</td>
 [2m162[0m | [33;1m|[0m                       <td className="py-2">
 [2m163[0m | [33;1m|[0m                         {pay.order_id ? (
 [2m164[0m | [33;1m|[0m                           <a href={`/admin/orders?search=${pay.order_id}`} className="underline text-blue-700 hover:text-blue-900" title="View order">{pay.order_id}</a>
 [2m165[0m | [33;1m|[0m                         ) : "-"}
 [2m166[0m | [33;1m|[0m                       </td>
 [2m167[0m | [33;1m|[0m                       <td className="py-2">
 [2m168[0m | [33;1m|[0m                         {pay.email ? (
 [2m169[0m | [33;1m|[0m                           <a href={`/admin/customers?search=${pay.email}`} className="underline text-blue-700 hover:text-blue-900" title="View customer">{pay.email}</a>
 [2m170[0m | [33;1m|[0m                         ) : "-"}
 [2m171[0m | [33;1m|[0m                       </td>
 [2m172[0m | [33;1m|[0m                       <td className="py-2">â‚¦{Number(pay.amount).toLocaleString()}</td>
 [2m173[0m | [33;1m|[0m                       <td className="py-2">{pay.method || "-"}</td>
 [2m174[0m | [33;1m|[0m                       <td className="py-2 capitalize">{pay.status}</td>
 [2m175[0m | [33;1m|[0m                       <td className="py-2">{pay.created_at ? new Date(pay.created_at).toLocaleString() : "-"}</td>
 [2m176[0m | [33;1m|[0m                       <td className="py-2">
 [2m177[0m | [33;1m|[0m                         <button className="underline text-blue-700 hover:text-blue-900" onClick={() => setSelected(pay)}>View</button>
 [2m178[0m | [33;1m|[0m                       </td>
 [2m179[0m | [33;1m|[0m                     </tr>
 [2m180[0m | [33;1m|[0m                   ))}
 [2m181[0m | [33;1m|[0m                 </tbody>
 [2m182[0m | [33;1m|[0m               </table>
 [2m183[0m | [33;1m|[0m             </div>
 [2m184[0m | [33;1m|[0m           )}
 [2m185[0m | [33;1m|[0m         </div>
 [2m186[0m | [33;1m|[0m         {/* Payment Details Modal */}
 [2m187[0m | [33;1m|[0m         {selected && (
 [2m188[0m | [33;1m|[0m           <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 px-2 sm:px-0">
 [2m189[0m | [33;1m|[0m             <div className="bg-white rounded-xl shadow-lg p-2 sm:p-4 md:p-6 w-full max-w-xl relative">
 [2m190[0m | [33;1m|[0m               <button
 [2m191[0m | [33;1m|[0m                 className="absolute top-2 right-2 text-gray-700 hover:text-black text-2xl font-bold"
 [2m192[0m | [33;1m|[0m                 onClick={() => setSelected(null)}
 [2m193[0m | [33;1m|[0m                 aria-label="Close payment details"
 [2m194[0m | [33;1m|[0m               >
 [2m195[0m | [33;1m|[0m                 &times;
 [2m196[0m | [33;1m|[0m               </button>
 [2m197[0m | [33;1m|[0m               <h2 className="text-xl font-bold mb-2 text-black">Payment Details</h2>
 [2m198[0m | [33;1m|[0m               <div className="mb-2 text-gray-900 text-sm sm:text-base">
 [2m199[0m | [33;1m|[0m                 <strong>Reference:</strong> {selected.reference}<br />
 [2m200[0m | [33;1m|[0m                 <strong>Order:</strong> {selected.order_id ? (
 [2m201[0m | [33;1m|[0m                   <a href={`/admin/orders?search=${selected.order_id}`} className="underline text-blue-700 hover:text-blue-900">{selected.order_id}</a>
 [2m202[0m | [33;1m|[0m                 ) : "-"}<br />
 [2m203[0m | [33;1m|[0m                 <strong>Customer:</strong> {selected.email ? (
 [2m204[0m | [33;1m|[0m                   <a href={`/admin/customers?search=${selected.email}`} className="underline text-blue-700 hover:text-blue-900">{selected.email}</a>
 [2m205[0m | [33;1m|[0m                 ) : "-"}<br />
 [2m206[0m | [33;1m|[0m                 <strong>Amount:</strong> â‚¦{Number(selected.amount).toLocaleString()}<br />
 [2m207[0m | [33;1m|[0m                 <strong>Method:</strong> {selected.method || "-"}<br />
 [2m208[0m | [33;1m|[0m                 <strong>Status:</strong> <span className="capitalize">{selected.status}</span><br />
 [2m209[0m | [33;1m|[0m                 <strong>Date:</strong> {selected.created_at ? new Date(selected.created_at).toLocaleString() : "-"}<br />
 [2m210[0m | [33;1m|[0m                 {selected.metadata && (
 [2m211[0m | [33;1m|[0m                   <>
 [2m212[0m | [33;1m|[0m                     <strong>Metadata:</strong> <pre className="bg-gray-100 rounded p-2 text-xs overflow-x-auto">{JSON.stringify(selected.metadata, null, 2)}</pre>
 [2m213[0m | [33;1m|[0m                   </>
 [2m214[0m | [33;1m|[0m                 )}
 [2m215[0m | [33;1m|[0m               </div>
 [2m216[0m | [33;1m|[0m             </div>
 [2m217[0m | [33;1m|[0m           </div>
 [2m218[0m | [33;1m|[0m         )}
 [2m219[0m | [33;1m|[0m       </div>
 [2m220[0m | [33;1m|[0m     );
 [2m221[0m | [33;1m|[0m[33;1m-[0m[33;1m>[0m }
     : [33;1m`[0m[33;1m---[0m[33;1m-[0m [33;1mexported more than once[0m
     `----

Error: 
  [36m>[0m Exported identifiers must be unique

  [31mx[0m The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:42:1]
 [2m42[0m |     </div>
 [2m43[0m |   );
 [2m44[0m | }
 [2m45[0m | "use client";
    : [31;1m^^^^^^^^^^^^^[0m
 [2m46[0m | import { useState, useMemo } from "react";
 [2m47[0m | import { useQuery } from "@tanstack/react-query";
    `----

  [31mx[0m You're importing a component that needs useState. It only works in a Client Component but none of its parents are marked with "use client", so they're Server Components by default.
  [31m|[0m Learn more: https://nextjs.org/docs/getting-started/react-essentials
  [31m|[0m 
  [31m|[0m 
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:43:1]
 [2m43[0m |   );
 [2m44[0m | }
 [2m45[0m | "use client";
 [2m46[0m | import { useState, useMemo } from "react";
    : [31;1m         ^^^^^^^^[0m
 [2m47[0m | import { useQuery } from "@tanstack/react-query";
 [2m48[0m | 
 [2m49[0m | const fetchPayments = async (params: Record<string, string>) => {
    `----

Import trace for requested module:
./src/app/admin/payments/page.tsx
 â¨¯ ./src/app/admin/payments/page.tsx
Error: 
  [31mx[0m the name `fetchPayments` is defined multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:1:1]
 [2m 1[0m | import React from 'react';
 [2m 2[0m | 
 [2m 3[0m | async function fetchPayments() {
    : [31;1m               ^^^^^^|^^^^^^[0m
    :                      [31;1m`-- [31;1mprevious definition of `fetchPayments` here[0m[0m
 [2m 4[0m |   const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
 [2m 5[0m |   if (!res.ok) throw new Error('Failed to fetch payments');
 [2m 6[0m |   const j = await res.json();
 [2m 7[0m |   return j.data || [];
 [2m 8[0m | }
 [2m 9[0m | 
 [2m10[0m | export default async function AdminPaymentsPage() {
 [2m11[0m |   const payments = await fetchPayments();
 [2m12[0m | 
 [2m13[0m |   return (
 [2m14[0m |     <div className="p-6">
 [2m15[0m |       <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m16[0m |       <div className="overflow-auto">
 [2m17[0m |         <table className="min-w-full table-auto">
 [2m18[0m |           <thead>
 [2m19[0m |             <tr>
 [2m20[0m |               <th className="text-left px-2">Reference</th>
 [2m21[0m |               <th className="text-left px-2">Amount</th>
 [2m22[0m |               <th className="text-left px-2">Method</th>
 [2m23[0m |               <th className="text-left px-2">Status</th>
 [2m24[0m |               <th className="text-left px-2">Order</th>
 [2m25[0m |               <th className="text-left px-2">Created</th>
 [2m26[0m |             </tr>
 [2m27[0m |           </thead>
 [2m28[0m |           <tbody>
 [2m29[0m |             {payments.map((p: any) => (
 [2m30[0m |               <tr key={p.id} className="border-t">
 [2m31[0m |                 <td className="px-2 py-1">{p.reference}</td>
 [2m32[0m |                 <td className="px-2 py-1">{p.amount}</td>
 [2m33[0m |                 <td className="px-2 py-1">{p.payment_method}</td>
 [2m34[0m |                 <td className="px-2 py-1">{p.status}</td>
 [2m35[0m |                 <td className="px-2 py-1">{p.order_id}</td>
 [2m36[0m |                 <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m37[0m |               </tr>
 [2m38[0m |             ))}
 [2m39[0m |           </tbody>
 [2m40[0m |         </table>
 [2m41[0m |       </div>
 [2m42[0m |     </div>
 [2m43[0m |   );
 [2m44[0m | }
 [2m45[0m | "use client";
 [2m46[0m | import { useState, useMemo } from "react";
 [2m47[0m | import { useQuery } from "@tanstack/react-query";
 [2m48[0m | 
 [2m49[0m | const fetchPayments = async (params: Record<string, string>) => {
    : [33;1m      ^^^^^^|^^^^^^[0m
    :             [33;1m`-- [33;1m`fetchPayments` redefined here[0m[0m
 [2m50[0m |   const url = new URL("/api/payments", window.location.origin);
 [2m51[0m |   Object.entries(params).forEach(([k, v]) => v && url.searchParams.set(k, v));
 [2m52[0m |   const response = await fetch(url.toString());
    `----

  [31mx[0m the name `default` is exported multiple times
     ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:7:1]
 [2m  7[0m |       return j.data || [];
 [2m  8[0m |     }
 [2m  9[0m |     
 [2m 10[0m | [31;1m,[0m[31;1m-[0m[31;1m>[0m export default async function AdminPaymentsPage() {
 [2m 11[0m | [31;1m|[0m     const payments = await fetchPayments();
 [2m 12[0m | [31;1m|[0m   
 [2m 13[0m | [31;1m|[0m     return (
 [2m 14[0m | [31;1m|[0m       <div className="p-6">
 [2m 15[0m | [31;1m|[0m         <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 16[0m | [31;1m|[0m         <div className="overflow-auto">
 [2m 17[0m | [31;1m|[0m           <table className="min-w-full table-auto">
 [2m 18[0m | [31;1m|[0m             <thead>
 [2m 19[0m | [31;1m|[0m               <tr>
 [2m 20[0m | [31;1m|[0m                 <th className="text-left px-2">Reference</th>
 [2m 21[0m | [31;1m|[0m                 <th className="text-left px-2">Amount</th>
 [2m 22[0m | [31;1m|[0m                 <th className="text-left px-2">Method</th>
 [2m 23[0m | [31;1m|[0m                 <th className="text-left px-2">Status</th>
 [2m 24[0m | [31;1m|[0m                 <th className="text-left px-2">Order</th>
 [2m 25[0m | [31;1m|[0m                 <th className="text-left px-2">Created</th>
 [2m 26[0m | [31;1m|[0m               </tr>
 [2m 27[0m | [31;1m|[0m             </thead>
 [2m 28[0m | [31;1m|[0m             <tbody>
 [2m 29[0m | [31;1m|[0m               {payments.map((p: any) => (
 [2m 30[0m | [31;1m|[0m                 <tr key={p.id} className="border-t">
 [2m 31[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.reference}</td>
 [2m 32[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.amount}</td>
 [2m 33[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.payment_method}</td>
 [2m 34[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.status}</td>
 [2m 35[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.order_id}</td>
 [2m 36[0m | [31;1m|[0m                   <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m 37[0m | [31;1m|[0m                 </tr>
 [2m 38[0m | [31;1m|[0m               ))}
 [2m 39[0m | [31;1m|[0m             </tbody>
 [2m 40[0m | [31;1m|[0m           </table>
 [2m 41[0m | [31;1m|[0m         </div>
 [2m 42[0m | [31;1m|[0m       </div>
 [2m 43[0m | [31;1m|[0m     );
 [2m 44[0m | [31;1m|[0m[31;1m-[0m[31;1m>[0m }
     : [31;1m`[0m[31;1m---[0m[31;1m-[0m [31;1mprevious exported here[0m
 [2m 45[0m |     "use client";
 [2m 46[0m |     import { useState, useMemo } from "react";
 [2m 47[0m |     import { useQuery } from "@tanstack/react-query";
 [2m 48[0m |     
 [2m 49[0m |     const fetchPayments = async (params: Record<string, string>) => {
 [2m 50[0m |       const url = new URL("/api/payments", window.location.origin);
 [2m 51[0m |       Object.entries(params).forEach(([k, v]) => v && url.searchParams.set(k, v));
 [2m 52[0m |       const response = await fetch(url.toString());
 [2m 53[0m |       if (!response.ok) throw new Error("Failed to fetch payments");
 [2m 54[0m |       const data = await response.json();
 [2m 55[0m |       return Array.isArray(data.data) ? data.data : data;
 [2m 56[0m |     };
 [2m 57[0m |     
 [2m 58[0m | [33;1m,[0m[33;1m-[0m[33;1m>[0m export default function PaymentsPage() {
 [2m 59[0m | [33;1m|[0m     const [filter, setFilter] = useState({ status: "", email: "" });
 [2m 60[0m | [33;1m|[0m     const [search, setSearch] = useState("");
 [2m 61[0m | [33;1m|[0m     const [selected, setSelected] = useState<any>(null);
 [2m 62[0m | [33;1m|[0m   
 [2m 63[0m | [33;1m|[0m     const { data: payments = [], error, isLoading, refetch } = useQuery({
 [2m 64[0m | [33;1m|[0m       queryKey: ["payments", filter, search],
 [2m 65[0m | [33;1m|[0m       queryFn: () => fetchPayments({ ...filter, email: search }),
 [2m 66[0m | [33;1m|[0m     });
 [2m 67[0m | [33;1m|[0m   
 [2m 68[0m | [33;1m|[0m     // Analytics summary
 [2m 69[0m | [33;1m|[0m     const analytics = useMemo(() => {
 [2m 70[0m | [33;1m|[0m       let total = 0, byStatus: Record<string, number> = {}, byMethod: Record<string, number> = {}, topCustomers: Record<string, number> = {};
 [2m 71[0m | [33;1m|[0m       payments.forEach((p: any) => {
 [2m 72[0m | [33;1m|[0m         total += Number(p.amount) || 0;
 [2m 73[0m | [33;1m|[0m         byStatus[p.status] = (byStatus[p.status] || 0) + 1;
 [2m 74[0m | [33;1m|[0m         byMethod[p.method || "other"] = (byMethod[p.method || "other"] || 0) + 1;
 [2m 75[0m | [33;1m|[0m         if (p.email) topCustomers[p.email] = (topCustomers[p.email] || 0) + 1;
 [2m 76[0m | [33;1m|[0m       });
 [2m 77[0m | [33;1m|[0m       const topCustomersArr = Object.entries(topCustomers).sort((a, b) => b[1] - a[1]).slice(0, 3);
 [2m 78[0m | [33;1m|[0m       return { total, byStatus, byMethod, topCustomersArr };
 [2m 79[0m | [33;1m|[0m     }, [payments]);
 [2m 80[0m | [33;1m|[0m   
 [2m 81[0m | [33;1m|[0m     return (
 [2m 82[0m | [33;1m|[0m       <div className="px-1 sm:px-2 md:px-4">
 [2m 83[0m | [33;1m|[0m         <h1 className="text-2xl font-bold mb-2 text-black">Payment Management</h1>
 [2m 84[0m | [33;1m|[0m         {/* Analytics */}
 [2m 85[0m | [33;1m|[0m         <div className="mb-4 grid grid-cols-1 gap-2 sm:gap-4 md:grid-cols-4">
 [2m 86[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m 87[0m | [33;1m|[0m             <div className="text-xs text-gray-500">Total Payments</div>
 [2m 88[0m | [33;1m|[0m             <div className="text-xl font-bold text-green-700">â‚¦{analytics.total.toLocaleString()}</div>
 [2m 89[0m | [33;1m|[0m           </div>
 [2m 90[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m 91[0m | [33;1m|[0m             <div className="text-xs text-gray-500">By Status</div>
 [2m 92[0m | [33;1m|[0m             <ul className="text-sm">
 [2m 93[0m | [33;1m|[0m               {Object.entries(analytics.byStatus).map(([status, count]) => (
 [2m 94[0m | [33;1m|[0m                 <li key={status}><span className="capitalize">{status}</span>: <span className="font-bold">{count}</span></li>
 [2m 95[0m | [33;1m|[0m               ))}
 [2m 96[0m | [33;1m|[0m             </ul>
 [2m 97[0m | [33;1m|[0m           </div>
 [2m 98[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m 99[0m | [33;1m|[0m             <div className="text-xs text-gray-500">By Method</div>
 [2m100[0m | [33;1m|[0m             <ul className="text-sm">
 [2m101[0m | [33;1m|[0m               {Object.entries(analytics.byMethod).map(([method, count]) => (
 [2m102[0m | [33;1m|[0m                 <li key={method}><span className="capitalize">{method}</span>: <span className="font-bold">{count}</span></li>
 [2m103[0m | [33;1m|[0m               ))}
 [2m104[0m | [33;1m|[0m             </ul>
 [2m105[0m | [33;1m|[0m           </div>
 [2m106[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m107[0m | [33;1m|[0m             <div className="text-xs text-gray-500">Top Customers</div>
 [2m108[0m | [33;1m|[0m             <ul className="text-sm">
 [2m109[0m | [33;1m|[0m               {analytics.topCustomersArr.map(([email, count]) => (
 [2m110[0m | [33;1m|[0m                 <li key={email}>{email}: <span className="font-bold">{count}</span></li>
 [2m111[0m | [33;1m|[0m               ))}
 [2m112[0m | [33;1m|[0m             </ul>
 [2m113[0m | [33;1m|[0m           </div>
 [2m114[0m | [33;1m|[0m         </div>
 [2m115[0m | [33;1m|[0m         {/* Filters/Search */}
 [2m116[0m | [33;1m|[0m         <div className="mb-4 flex flex-col gap-2 sm:flex-row sm:gap-4">
 [2m117[0m | [33;1m|[0m           <input
 [2m118[0m | [33;1m|[0m             type="text"
 [2m119[0m | [33;1m|[0m             placeholder="Search by email, reference, or order ID"
 [2m120[0m | [33;1m|[0m             className="border rounded-lg px-3 py-2 text-gray-900 bg-white placeholder:text-gray-400 w-full sm:w-72"
 [2m121[0m | [33;1m|[0m             value={search}
 [2m122[0m | [33;1m|[0m             onChange={e => setSearch(e.target.value)}
 [2m123[0m | [33;1m|[0m           />
 [2m124[0m | [33;1m|[0m           <select
 [2m125[0m | [33;1m|[0m             className="border rounded-lg px-3 py-2 text-gray-900 bg-white w-full sm:w-48"
 [2m126[0m | [33;1m|[0m             value={filter.status}
 [2m127[0m | [33;1m|[0m             onChange={e => setFilter(f => ({ ...f, status: e.target.value }))}
 [2m128[0m | [33;1m|[0m           >
 [2m129[0m | [33;1m|[0m             <option value="">All Statuses</option>
 [2m130[0m | [33;1m|[0m             <option value="pending">Pending</option>
 [2m131[0m | [33;1m|[0m             <option value="success">Success</option>
 [2m132[0m | [33;1m|[0m             <option value="failed">Failed</option>
 [2m133[0m | [33;1m|[0m           </select>
 [2m134[0m | [33;1m|[0m         </div>
 [2m135[0m | [33;1m|[0m         {/* Table */}
 [2m136[0m | [33;1m|[0m         <div className="bg-white rounded-xl shadow p-2 sm:p-4 md:p-6 border border-blue_gray-100 overflow-x-auto">
 [2m137[0m | [33;1m|[0m           {isLoading ? (
 [2m138[0m | [33;1m|[0m             <div className="text-gray-900 text-base">Loading payments...</div>
 [2m139[0m | [33;1m|[0m           ) : error ? (
 [2m140[0m | [33;1m|[0m             <div className="text-red-600 mb-2">Failed to load payments</div>
 [2m141[0m | [33;1m|[0m           ) : payments.length === 0 ? (
 [2m142[0m | [33;1m|[0m             <div className="text-gray-700">No payments found.</div>
 [2m143[0m | [33;1m|[0m           ) : (
 [2m144[0m | [33;1m|[0m             <div className="w-full overflow-x-auto">
 [2m145[0m | [33;1m|[0m               <table className="min-w-[700px] w-full text-left text-sm text-gray-900">
 [2m146[0m | [33;1m|[0m                 <thead>
 [2m147[0m | [33;1m|[0m                   <tr>
 [2m148[0m | [33;1m|[0m                     <th className="py-2 font-bold">Reference</th>
 [2m149[0m | [33;1m|[0m                     <th className="py-2 font-bold">Order</th>
 [2m150[0m | [33;1m|[0m                     <th className="py-2 font-bold">Customer</th>
 [2m151[0m | [33;1m|[0m                     <th className="py-2 font-bold">Amount</th>
 [2m152[0m | [33;1m|[0m                     <th className="py-2 font-bold">Method</th>
 [2m153[0m | [33;1m|[0m                     <th className="py-2 font-bold">Status</th>
 [2m154[0m | [33;1m|[0m                     <th className="py-2 font-bold">Date</th>
 [2m155[0m | [33;1m|[0m                     <th className="py-2 font-bold">Actions</th>
 [2m156[0m | [33;1m|[0m                   </tr>
 [2m157[0m | [33;1m|[0m                 </thead>
 [2m158[0m | [33;1m|[0m                 <tbody>
 [2m159[0m | [33;1m|[0m                   {payments.map((pay: any) => (
 [2m160[0m | [33;1m|[0m                     <tr key={pay.reference} className="border-t">
 [2m161[0m | [33;1m|[0m                       <td className="py-2">{pay.reference}</td>
 [2m162[0m | [33;1m|[0m                       <td className="py-2">
 [2m163[0m | [33;1m|[0m                         {pay.order_id ? (
 [2m164[0m | [33;1m|[0m                           <a href={`/admin/orders?search=${pay.order_id}`} className="underline text-blue-700 hover:text-blue-900" title="View order">{pay.order_id}</a>
 [2m165[0m | [33;1m|[0m                         ) : "-"}
 [2m166[0m | [33;1m|[0m                       </td>
 [2m167[0m | [33;1m|[0m                       <td className="py-2">
 [2m168[0m | [33;1m|[0m                         {pay.email ? (
 [2m169[0m | [33;1m|[0m                           <a href={`/admin/customers?search=${pay.email}`} className="underline text-blue-700 hover:text-blue-900" title="View customer">{pay.email}</a>
 [2m170[0m | [33;1m|[0m                         ) : "-"}
 [2m171[0m | [33;1m|[0m                       </td>
 [2m172[0m | [33;1m|[0m                       <td className="py-2">â‚¦{Number(pay.amount).toLocaleString()}</td>
 [2m173[0m | [33;1m|[0m                       <td className="py-2">{pay.method || "-"}</td>
 [2m174[0m | [33;1m|[0m                       <td className="py-2 capitalize">{pay.status}</td>
 [2m175[0m | [33;1m|[0m                       <td className="py-2">{pay.created_at ? new Date(pay.created_at).toLocaleString() : "-"}</td>
 [2m176[0m | [33;1m|[0m                       <td className="py-2">
 [2m177[0m | [33;1m|[0m                         <button className="underline text-blue-700 hover:text-blue-900" onClick={() => setSelected(pay)}>View</button>
 [2m178[0m | [33;1m|[0m                       </td>
 [2m179[0m | [33;1m|[0m                     </tr>
 [2m180[0m | [33;1m|[0m                   ))}
 [2m181[0m | [33;1m|[0m                 </tbody>
 [2m182[0m | [33;1m|[0m               </table>
 [2m183[0m | [33;1m|[0m             </div>
 [2m184[0m | [33;1m|[0m           )}
 [2m185[0m | [33;1m|[0m         </div>
 [2m186[0m | [33;1m|[0m         {/* Payment Details Modal */}
 [2m187[0m | [33;1m|[0m         {selected && (
 [2m188[0m | [33;1m|[0m           <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 px-2 sm:px-0">
 [2m189[0m | [33;1m|[0m             <div className="bg-white rounded-xl shadow-lg p-2 sm:p-4 md:p-6 w-full max-w-xl relative">
 [2m190[0m | [33;1m|[0m               <button
 [2m191[0m | [33;1m|[0m                 className="absolute top-2 right-2 text-gray-700 hover:text-black text-2xl font-bold"
 [2m192[0m | [33;1m|[0m                 onClick={() => setSelected(null)}
 [2m193[0m | [33;1m|[0m                 aria-label="Close payment details"
 [2m194[0m | [33;1m|[0m               >
 [2m195[0m | [33;1m|[0m                 &times;
 [2m196[0m | [33;1m|[0m               </button>
 [2m197[0m | [33;1m|[0m               <h2 className="text-xl font-bold mb-2 text-black">Payment Details</h2>
 [2m198[0m | [33;1m|[0m               <div className="mb-2 text-gray-900 text-sm sm:text-base">
 [2m199[0m | [33;1m|[0m                 <strong>Reference:</strong> {selected.reference}<br />
 [2m200[0m | [33;1m|[0m                 <strong>Order:</strong> {selected.order_id ? (
 [2m201[0m | [33;1m|[0m                   <a href={`/admin/orders?search=${selected.order_id}`} className="underline text-blue-700 hover:text-blue-900">{selected.order_id}</a>
 [2m202[0m | [33;1m|[0m                 ) : "-"}<br />
 [2m203[0m | [33;1m|[0m                 <strong>Customer:</strong> {selected.email ? (
 [2m204[0m | [33;1m|[0m                   <a href={`/admin/customers?search=${selected.email}`} className="underline text-blue-700 hover:text-blue-900">{selected.email}</a>
 [2m205[0m | [33;1m|[0m                 ) : "-"}<br />
 [2m206[0m | [33;1m|[0m                 <strong>Amount:</strong> â‚¦{Number(selected.amount).toLocaleString()}<br />
 [2m207[0m | [33;1m|[0m                 <strong>Method:</strong> {selected.method || "-"}<br />
 [2m208[0m | [33;1m|[0m                 <strong>Status:</strong> <span className="capitalize">{selected.status}</span><br />
 [2m209[0m | [33;1m|[0m                 <strong>Date:</strong> {selected.created_at ? new Date(selected.created_at).toLocaleString() : "-"}<br />
 [2m210[0m | [33;1m|[0m                 {selected.metadata && (
 [2m211[0m | [33;1m|[0m                   <>
 [2m212[0m | [33;1m|[0m                     <strong>Metadata:</strong> <pre className="bg-gray-100 rounded p-2 text-xs overflow-x-auto">{JSON.stringify(selected.metadata, null, 2)}</pre>
 [2m213[0m | [33;1m|[0m                   </>
 [2m214[0m | [33;1m|[0m                 )}
 [2m215[0m | [33;1m|[0m               </div>
 [2m216[0m | [33;1m|[0m             </div>
 [2m217[0m | [33;1m|[0m           </div>
 [2m218[0m | [33;1m|[0m         )}
 [2m219[0m | [33;1m|[0m       </div>
 [2m220[0m | [33;1m|[0m     );
 [2m221[0m | [33;1m|[0m[33;1m-[0m[33;1m>[0m }
     : [33;1m`[0m[33;1m---[0m[33;1m-[0m [33;1mexported more than once[0m
     `----

Error: 
  [36m>[0m Exported identifiers must be unique

  [31mx[0m The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:42:1]
 [2m42[0m |     </div>
 [2m43[0m |   );
 [2m44[0m | }
 [2m45[0m | "use client";
    : [31;1m^^^^^^^^^^^^^[0m
 [2m46[0m | import { useState, useMemo } from "react";
 [2m47[0m | import { useQuery } from "@tanstack/react-query";
    `----

  [31mx[0m You're importing a component that needs useState. It only works in a Client Component but none of its parents are marked with "use client", so they're Server Components by default.
  [31m|[0m Learn more: https://nextjs.org/docs/getting-started/react-essentials
  [31m|[0m 
  [31m|[0m 
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:43:1]
 [2m43[0m |   );
 [2m44[0m | }
 [2m45[0m | "use client";
 [2m46[0m | import { useState, useMemo } from "react";
    : [31;1m         ^^^^^^^^[0m
 [2m47[0m | import { useQuery } from "@tanstack/react-query";
 [2m48[0m | 
 [2m49[0m | const fetchPayments = async (params: Record<string, string>) => {
    `----

Import trace for requested module:
./src/app/admin/payments/page.tsx
 GET /admin/payments 500 in 4719ms
 â¨¯ ./src/app/admin/payments/page.tsx
Error: 
  [31mx[0m the name `React` is defined multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:1:1]
 [2m 1[0m | import React from 'react';
    : [31;1m       ^^|^^[0m
    :          [31;1m`-- [31;1mprevious definition of `React` here[0m[0m
 [2m 2[0m | import PaymentsClient from './PaymentsClient';
 [2m 3[0m | 
 [2m 4[0m | export default function AdminPaymentsPage() {
 [2m 5[0m |   return (
 [2m 6[0m |     <div className="p-6">
 [2m 7[0m |       <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 8[0m |       {/* Client-side interactive payments table */}
 [2m 9[0m |       <PaymentsClient />
 [2m10[0m |     </div>
 [2m11[0m |   );
 [2m12[0m | }
 [2m13[0m | import React from 'react';
    : [33;1m       ^^|^^[0m
    :          [33;1m`-- [33;1m`React` redefined here[0m[0m
 [2m14[0m | 
 [2m15[0m | async function fetchPayments() {
 [2m16[0m |   const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
    `----

  [31mx[0m the name `AdminPaymentsPage` is defined multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:1:1]
 [2m 1[0m | import React from 'react';
 [2m 2[0m | import PaymentsClient from './PaymentsClient';
 [2m 3[0m | 
 [2m 4[0m | export default function AdminPaymentsPage() {
    : [31;1m                        ^^^^^^^^|^^^^^^^^[0m
    :                                 [31;1m`-- [31;1mprevious definition of `AdminPaymentsPage` here[0m[0m
 [2m 5[0m |   return (
 [2m 6[0m |     <div className="p-6">
 [2m 7[0m |       <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 8[0m |       {/* Client-side interactive payments table */}
 [2m 9[0m |       <PaymentsClient />
 [2m10[0m |     </div>
 [2m11[0m |   );
 [2m12[0m | }
 [2m13[0m | import React from 'react';
 [2m14[0m | 
 [2m15[0m | async function fetchPayments() {
 [2m16[0m |   const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
 [2m17[0m |   if (!res.ok) throw new Error('Failed to fetch payments');
 [2m18[0m |   const j = await res.json();
 [2m19[0m |   return j.data || [];
 [2m20[0m | }
 [2m21[0m | 
 [2m22[0m | export default async function AdminPaymentsPage() {
    : [33;1m                              ^^^^^^^^|^^^^^^^^[0m
    :                                       [33;1m`-- [33;1m`AdminPaymentsPage` redefined here[0m[0m
 [2m23[0m |   const payments = await fetchPayments();
 [2m24[0m | 
 [2m25[0m |   return (
    `----

  [31mx[0m the name `fetchPayments` is defined multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:12:1]
 [2m12[0m | }
 [2m13[0m | import React from 'react';
 [2m14[0m | 
 [2m15[0m | async function fetchPayments() {
    : [31;1m               ^^^^^^|^^^^^^[0m
    :                      [31;1m`-- [31;1mprevious definition of `fetchPayments` here[0m[0m
 [2m16[0m |   const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
 [2m17[0m |   if (!res.ok) throw new Error('Failed to fetch payments');
 [2m18[0m |   const j = await res.json();
 [2m19[0m |   return j.data || [];
 [2m20[0m | }
 [2m21[0m | 
 [2m22[0m | export default async function AdminPaymentsPage() {
 [2m23[0m |   const payments = await fetchPayments();
 [2m24[0m | 
 [2m25[0m |   return (
 [2m26[0m |     <div className="p-6">
 [2m27[0m |       <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m28[0m |       <div className="overflow-auto">
 [2m29[0m |         <table className="min-w-full table-auto">
 [2m30[0m |           <thead>
 [2m31[0m |             <tr>
 [2m32[0m |               <th className="text-left px-2">Reference</th>
 [2m33[0m |               <th className="text-left px-2">Amount</th>
 [2m34[0m |               <th className="text-left px-2">Method</th>
 [2m35[0m |               <th className="text-left px-2">Status</th>
 [2m36[0m |               <th className="text-left px-2">Order</th>
 [2m37[0m |               <th className="text-left px-2">Created</th>
 [2m38[0m |             </tr>
 [2m39[0m |           </thead>
 [2m40[0m |           <tbody>
 [2m41[0m |             {payments.map((p: any) => (
 [2m42[0m |               <tr key={p.id} className="border-t">
 [2m43[0m |                 <td className="px-2 py-1">{p.reference}</td>
 [2m44[0m |                 <td className="px-2 py-1">{p.amount}</td>
 [2m45[0m |                 <td className="px-2 py-1">{p.payment_method}</td>
 [2m46[0m |                 <td className="px-2 py-1">{p.status}</td>
 [2m47[0m |                 <td className="px-2 py-1">{p.order_id}</td>
 [2m48[0m |                 <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m49[0m |               </tr>
 [2m50[0m |             ))}
 [2m51[0m |           </tbody>
 [2m52[0m |         </table>
 [2m53[0m |       </div>
 [2m54[0m |     </div>
 [2m55[0m |   );
 [2m56[0m | }
 [2m57[0m | "use client";
 [2m58[0m | import { useState, useMemo } from "react";
 [2m59[0m | import { useQuery } from "@tanstack/react-query";
 [2m60[0m | 
 [2m61[0m | const fetchPayments = async (params: Record<string, string>) => {
    : [33;1m      ^^^^^^|^^^^^^[0m
    :             [33;1m`-- [33;1m`fetchPayments` redefined here[0m[0m
 [2m62[0m |   const url = new URL("/api/payments", window.location.origin);
 [2m63[0m |   Object.entries(params).forEach(([k, v]) => v && url.searchParams.set(k, v));
 [2m64[0m |   const response = await fetch(url.toString());
    `----

  [31mx[0m the name `default` is exported multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:1:1]
 [2m 1[0m |     import React from 'react';
 [2m 2[0m |     import PaymentsClient from './PaymentsClient';
 [2m 3[0m |     
 [2m 4[0m | [31;1m,[0m[31;1m-[0m[31;1m>[0m export default function AdminPaymentsPage() {
 [2m 5[0m | [31;1m|[0m     return (
 [2m 6[0m | [31;1m|[0m       <div className="p-6">
 [2m 7[0m | [31;1m|[0m         <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 8[0m | [31;1m|[0m         {/* Client-side interactive payments table */}
 [2m 9[0m | [31;1m|[0m         <PaymentsClient />
 [2m10[0m | [31;1m|[0m       </div>
 [2m11[0m | [31;1m|[0m     );
 [2m12[0m | [31;1m|[0m[31;1m-[0m[31;1m>[0m }
    : [31;1m`[0m[31;1m---[0m[31;1m-[0m [31;1mprevious exported here[0m
 [2m13[0m |     import React from 'react';
 [2m14[0m |     
 [2m15[0m |     async function fetchPayments() {
 [2m16[0m |       const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
 [2m17[0m |       if (!res.ok) throw new Error('Failed to fetch payments');
 [2m18[0m |       const j = await res.json();
 [2m19[0m |       return j.data || [];
 [2m20[0m |     }
 [2m21[0m |     
 [2m22[0m | [33;1m,[0m[33;1m-[0m[33;1m>[0m export default async function AdminPaymentsPage() {
 [2m23[0m | [33;1m|[0m     const payments = await fetchPayments();
 [2m24[0m | [33;1m|[0m   
 [2m25[0m | [33;1m|[0m     return (
 [2m26[0m | [33;1m|[0m       <div className="p-6">
 [2m27[0m | [33;1m|[0m         <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m28[0m | [33;1m|[0m         <div className="overflow-auto">
 [2m29[0m | [33;1m|[0m           <table className="min-w-full table-auto">
 [2m30[0m | [33;1m|[0m             <thead>
 [2m31[0m | [33;1m|[0m               <tr>
 [2m32[0m | [33;1m|[0m                 <th className="text-left px-2">Reference</th>
 [2m33[0m | [33;1m|[0m                 <th className="text-left px-2">Amount</th>
 [2m34[0m | [33;1m|[0m                 <th className="text-left px-2">Method</th>
 [2m35[0m | [33;1m|[0m                 <th className="text-left px-2">Status</th>
 [2m36[0m | [33;1m|[0m                 <th className="text-left px-2">Order</th>
 [2m37[0m | [33;1m|[0m                 <th className="text-left px-2">Created</th>
 [2m38[0m | [33;1m|[0m               </tr>
 [2m39[0m | [33;1m|[0m             </thead>
 [2m40[0m | [33;1m|[0m             <tbody>
 [2m41[0m | [33;1m|[0m               {payments.map((p: any) => (
 [2m42[0m | [33;1m|[0m                 <tr key={p.id} className="border-t">
 [2m43[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.reference}</td>
 [2m44[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.amount}</td>
 [2m45[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.payment_method}</td>
 [2m46[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.status}</td>
 [2m47[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.order_id}</td>
 [2m48[0m | [33;1m|[0m                   <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m49[0m | [33;1m|[0m                 </tr>
 [2m50[0m | [33;1m|[0m               ))}
 [2m51[0m | [33;1m|[0m             </tbody>
 [2m52[0m | [33;1m|[0m           </table>
 [2m53[0m | [33;1m|[0m         </div>
 [2m54[0m | [33;1m|[0m       </div>
 [2m55[0m | [33;1m|[0m     );
 [2m56[0m | [33;1m|[0m[33;1m-[0m[33;1m>[0m }
    : [33;1m`[0m[33;1m---[0m[33;1m-[0m [33;1mexported more than once[0m
 [2m57[0m |     "use client";
 [2m58[0m |     import { useState, useMemo } from "react";
 [2m59[0m |     import { useQuery } from "@tanstack/react-query";
    `----

Error: 
  [36m>[0m Exported identifiers must be unique

  [31mx[0m the name `default` is exported multiple times
     ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:19:1]
 [2m 19[0m |       return j.data || [];
 [2m 20[0m |     }
 [2m 21[0m |     
 [2m 22[0m | [31;1m,[0m[31;1m-[0m[31;1m>[0m export default async function AdminPaymentsPage() {
 [2m 23[0m | [31;1m|[0m     const payments = await fetchPayments();
 [2m 24[0m | [31;1m|[0m   
 [2m 25[0m | [31;1m|[0m     return (
 [2m 26[0m | [31;1m|[0m       <div className="p-6">
 [2m 27[0m | [31;1m|[0m         <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 28[0m | [31;1m|[0m         <div className="overflow-auto">
 [2m 29[0m | [31;1m|[0m           <table className="min-w-full table-auto">
 [2m 30[0m | [31;1m|[0m             <thead>
 [2m 31[0m | [31;1m|[0m               <tr>
 [2m 32[0m | [31;1m|[0m                 <th className="text-left px-2">Reference</th>
 [2m 33[0m | [31;1m|[0m                 <th className="text-left px-2">Amount</th>
 [2m 34[0m | [31;1m|[0m                 <th className="text-left px-2">Method</th>
 [2m 35[0m | [31;1m|[0m                 <th className="text-left px-2">Status</th>
 [2m 36[0m | [31;1m|[0m                 <th className="text-left px-2">Order</th>
 [2m 37[0m | [31;1m|[0m                 <th className="text-left px-2">Created</th>
 [2m 38[0m | [31;1m|[0m               </tr>
 [2m 39[0m | [31;1m|[0m             </thead>
 [2m 40[0m | [31;1m|[0m             <tbody>
 [2m 41[0m | [31;1m|[0m               {payments.map((p: any) => (
 [2m 42[0m | [31;1m|[0m                 <tr key={p.id} className="border-t">
 [2m 43[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.reference}</td>
 [2m 44[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.amount}</td>
 [2m 45[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.payment_method}</td>
 [2m 46[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.status}</td>
 [2m 47[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.order_id}</td>
 [2m 48[0m | [31;1m|[0m                   <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m 49[0m | [31;1m|[0m                 </tr>
 [2m 50[0m | [31;1m|[0m               ))}
 [2m 51[0m | [31;1m|[0m             </tbody>
 [2m 52[0m | [31;1m|[0m           </table>
 [2m 53[0m | [31;1m|[0m         </div>
 [2m 54[0m | [31;1m|[0m       </div>
 [2m 55[0m | [31;1m|[0m     );
 [2m 56[0m | [31;1m|[0m[31;1m-[0m[31;1m>[0m }
     : [31;1m`[0m[31;1m---[0m[31;1m-[0m [31;1mprevious exported here[0m
 [2m 57[0m |     "use client";
 [2m 58[0m |     import { useState, useMemo } from "react";
 [2m 59[0m |     import { useQuery } from "@tanstack/react-query";
 [2m 60[0m |     
 [2m 61[0m |     const fetchPayments = async (params: Record<string, string>) => {
 [2m 62[0m |       const url = new URL("/api/payments", window.location.origin);
 [2m 63[0m |       Object.entries(params).forEach(([k, v]) => v && url.searchParams.set(k, v));
 [2m 64[0m |       const response = await fetch(url.toString());
 [2m 65[0m |       if (!response.ok) throw new Error("Failed to fetch payments");
 [2m 66[0m |       const data = await response.json();
 [2m 67[0m |       return Array.isArray(data.data) ? data.data : data;
 [2m 68[0m |     };
 [2m 69[0m |     
 [2m 70[0m | [33;1m,[0m[33;1m-[0m[33;1m>[0m export default function PaymentsPage() {
 [2m 71[0m | [33;1m|[0m     const [filter, setFilter] = useState({ status: "", email: "" });
 [2m 72[0m | [33;1m|[0m     const [search, setSearch] = useState("");
 [2m 73[0m | [33;1m|[0m     const [selected, setSelected] = useState<any>(null);
 [2m 74[0m | [33;1m|[0m   
 [2m 75[0m | [33;1m|[0m     const { data: payments = [], error, isLoading, refetch } = useQuery({
 [2m 76[0m | [33;1m|[0m       queryKey: ["payments", filter, search],
 [2m 77[0m | [33;1m|[0m       queryFn: () => fetchPayments({ ...filter, email: search }),
 [2m 78[0m | [33;1m|[0m     });
 [2m 79[0m | [33;1m|[0m   
 [2m 80[0m | [33;1m|[0m     // Analytics summary
 [2m 81[0m | [33;1m|[0m     const analytics = useMemo(() => {
 [2m 82[0m | [33;1m|[0m       let total = 0, byStatus: Record<string, number> = {}, byMethod: Record<string, number> = {}, topCustomers: Record<string, number> = {};
 [2m 83[0m | [33;1m|[0m       payments.forEach((p: any) => {
 [2m 84[0m | [33;1m|[0m         total += Number(p.amount) || 0;
 [2m 85[0m | [33;1m|[0m         byStatus[p.status] = (byStatus[p.status] || 0) + 1;
 [2m 86[0m | [33;1m|[0m         byMethod[p.method || "other"] = (byMethod[p.method || "other"] || 0) + 1;
 [2m 87[0m | [33;1m|[0m         if (p.email) topCustomers[p.email] = (topCustomers[p.email] || 0) + 1;
 [2m 88[0m | [33;1m|[0m       });
 [2m 89[0m | [33;1m|[0m       const topCustomersArr = Object.entries(topCustomers).sort((a, b) => b[1] - a[1]).slice(0, 3);
 [2m 90[0m | [33;1m|[0m       return { total, byStatus, byMethod, topCustomersArr };
 [2m 91[0m | [33;1m|[0m     }, [payments]);
 [2m 92[0m | [33;1m|[0m   
 [2m 93[0m | [33;1m|[0m     return (
 [2m 94[0m | [33;1m|[0m       <div className="px-1 sm:px-2 md:px-4">
 [2m 95[0m | [33;1m|[0m         <h1 className="text-2xl font-bold mb-2 text-black">Payment Management</h1>
 [2m 96[0m | [33;1m|[0m         {/* Analytics */}
 [2m 97[0m | [33;1m|[0m         <div className="mb-4 grid grid-cols-1 gap-2 sm:gap-4 md:grid-cols-4">
 [2m 98[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m 99[0m | [33;1m|[0m             <div className="text-xs text-gray-500">Total Payments</div>
 [2m100[0m | [33;1m|[0m             <div className="text-xl font-bold text-green-700">â‚¦{analytics.total.toLocaleString()}</div>
 [2m101[0m | [33;1m|[0m           </div>
 [2m102[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m103[0m | [33;1m|[0m             <div className="text-xs text-gray-500">By Status</div>
 [2m104[0m | [33;1m|[0m             <ul className="text-sm">
 [2m105[0m | [33;1m|[0m               {Object.entries(analytics.byStatus).map(([status, count]) => (
 [2m106[0m | [33;1m|[0m                 <li key={status}><span className="capitalize">{status}</span>: <span className="font-bold">{count}</span></li>
 [2m107[0m | [33;1m|[0m               ))}
 [2m108[0m | [33;1m|[0m             </ul>
 [2m109[0m | [33;1m|[0m           </div>
 [2m110[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m111[0m | [33;1m|[0m             <div className="text-xs text-gray-500">By Method</div>
 [2m112[0m | [33;1m|[0m             <ul className="text-sm">
 [2m113[0m | [33;1m|[0m               {Object.entries(analytics.byMethod).map(([method, count]) => (
 [2m114[0m | [33;1m|[0m                 <li key={method}><span className="capitalize">{method}</span>: <span className="font-bold">{count}</span></li>
 [2m115[0m | [33;1m|[0m               ))}
 [2m116[0m | [33;1m|[0m             </ul>
 [2m117[0m | [33;1m|[0m           </div>
 [2m118[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m119[0m | [33;1m|[0m             <div className="text-xs text-gray-500">Top Customers</div>
 [2m120[0m | [33;1m|[0m             <ul className="text-sm">
 [2m121[0m | [33;1m|[0m               {analytics.topCustomersArr.map(([email, count]) => (
 [2m122[0m | [33;1m|[0m                 <li key={email}>{email}: <span className="font-bold">{count}</span></li>
 [2m123[0m | [33;1m|[0m               ))}
 [2m124[0m | [33;1m|[0m             </ul>
 [2m125[0m | [33;1m|[0m           </div>
 [2m126[0m | [33;1m|[0m         </div>
 [2m127[0m | [33;1m|[0m         {/* Filters/Search */}
 [2m128[0m | [33;1m|[0m         <div className="mb-4 flex flex-col gap-2 sm:flex-row sm:gap-4">
 [2m129[0m | [33;1m|[0m           <input
 [2m130[0m | [33;1m|[0m             type="text"
 [2m131[0m | [33;1m|[0m             placeholder="Search by email, reference, or order ID"
 [2m132[0m | [33;1m|[0m             className="border rounded-lg px-3 py-2 text-gray-900 bg-white placeholder:text-gray-400 w-full sm:w-72"
 [2m133[0m | [33;1m|[0m             value={search}
 [2m134[0m | [33;1m|[0m             onChange={e => setSearch(e.target.value)}
 [2m135[0m | [33;1m|[0m           />
 [2m136[0m | [33;1m|[0m           <select
 [2m137[0m | [33;1m|[0m             className="border rounded-lg px-3 py-2 text-gray-900 bg-white w-full sm:w-48"
 [2m138[0m | [33;1m|[0m             value={filter.status}
 [2m139[0m | [33;1m|[0m             onChange={e => setFilter(f => ({ ...f, status: e.target.value }))}
 [2m140[0m | [33;1m|[0m           >
 [2m141[0m | [33;1m|[0m             <option value="">All Statuses</option>
 [2m142[0m | [33;1m|[0m             <option value="pending">Pending</option>
 [2m143[0m | [33;1m|[0m             <option value="success">Success</option>
 [2m144[0m | [33;1m|[0m             <option value="failed">Failed</option>
 [2m145[0m | [33;1m|[0m           </select>
 [2m146[0m | [33;1m|[0m         </div>
 [2m147[0m | [33;1m|[0m         {/* Table */}
 [2m148[0m | [33;1m|[0m         <div className="bg-white rounded-xl shadow p-2 sm:p-4 md:p-6 border border-blue_gray-100 overflow-x-auto">
 [2m149[0m | [33;1m|[0m           {isLoading ? (
 [2m150[0m | [33;1m|[0m             <div className="text-gray-900 text-base">Loading payments...</div>
 [2m151[0m | [33;1m|[0m           ) : error ? (
 [2m152[0m | [33;1m|[0m             <div className="text-red-600 mb-2">Failed to load payments</div>
 [2m153[0m | [33;1m|[0m           ) : payments.length === 0 ? (
 [2m154[0m | [33;1m|[0m             <div className="text-gray-700">No payments found.</div>
 [2m155[0m | [33;1m|[0m           ) : (
 [2m156[0m | [33;1m|[0m             <div className="w-full overflow-x-auto">
 [2m157[0m | [33;1m|[0m               <table className="min-w-[700px] w-full text-left text-sm text-gray-900">
 [2m158[0m | [33;1m|[0m                 <thead>
 [2m159[0m | [33;1m|[0m                   <tr>
 [2m160[0m | [33;1m|[0m                     <th className="py-2 font-bold">Reference</th>
 [2m161[0m | [33;1m|[0m                     <th className="py-2 font-bold">Order</th>
 [2m162[0m | [33;1m|[0m                     <th className="py-2 font-bold">Customer</th>
 [2m163[0m | [33;1m|[0m                     <th className="py-2 font-bold">Amount</th>
 [2m164[0m | [33;1m|[0m                     <th className="py-2 font-bold">Method</th>
 [2m165[0m | [33;1m|[0m                     <th className="py-2 font-bold">Status</th>
 [2m166[0m | [33;1m|[0m                     <th className="py-2 font-bold">Date</th>
 [2m167[0m | [33;1m|[0m                     <th className="py-2 font-bold">Actions</th>
 [2m168[0m | [33;1m|[0m                   </tr>
 [2m169[0m | [33;1m|[0m                 </thead>
 [2m170[0m | [33;1m|[0m                 <tbody>
 [2m171[0m | [33;1m|[0m                   {payments.map((pay: any) => (
 [2m172[0m | [33;1m|[0m                     <tr key={pay.reference} className="border-t">
 [2m173[0m | [33;1m|[0m                       <td className="py-2">{pay.reference}</td>
 [2m174[0m | [33;1m|[0m                       <td className="py-2">
 [2m175[0m | [33;1m|[0m                         {pay.order_id ? (
 [2m176[0m | [33;1m|[0m                           <a href={`/admin/orders?search=${pay.order_id}`} className="underline text-blue-700 hover:text-blue-900" title="View order">{pay.order_id}</a>
 [2m177[0m | [33;1m|[0m                         ) : "-"}
 [2m178[0m | [33;1m|[0m                       </td>
 [2m179[0m | [33;1m|[0m                       <td className="py-2">
 [2m180[0m | [33;1m|[0m                         {pay.email ? (
 [2m181[0m | [33;1m|[0m                           <a href={`/admin/customers?search=${pay.email}`} className="underline text-blue-700 hover:text-blue-900" title="View customer">{pay.email}</a>
 [2m182[0m | [33;1m|[0m                         ) : "-"}
 [2m183[0m | [33;1m|[0m                       </td>
 [2m184[0m | [33;1m|[0m                       <td className="py-2">â‚¦{Number(pay.amount).toLocaleString()}</td>
 [2m185[0m | [33;1m|[0m                       <td className="py-2">{pay.method || "-"}</td>
 [2m186[0m | [33;1m|[0m                       <td className="py-2 capitalize">{pay.status}</td>
 [2m187[0m | [33;1m|[0m                       <td className="py-2">{pay.created_at ? new Date(pay.created_at).toLocaleString() : "-"}</td>
 [2m188[0m | [33;1m|[0m                       <td className="py-2">
 [2m189[0m | [33;1m|[0m                         <button className="underline text-blue-700 hover:text-blue-900" onClick={() => setSelected(pay)}>View</button>
 [2m190[0m | [33;1m|[0m                       </td>
 [2m191[0m | [33;1m|[0m                     </tr>
 [2m192[0m | [33;1m|[0m                   ))}
 [2m193[0m | [33;1m|[0m                 </tbody>
 [2m194[0m | [33;1m|[0m               </table>
 [2m195[0m | [33;1m|[0m             </div>
 [2m196[0m | [33;1m|[0m           )}
 [2m197[0m | [33;1m|[0m         </div>
 [2m198[0m | [33;1m|[0m         {/* Payment Details Modal */}
 [2m199[0m | [33;1m|[0m         {selected && (
 [2m200[0m | [33;1m|[0m           <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 px-2 sm:px-0">
 [2m201[0m | [33;1m|[0m             <div className="bg-white rounded-xl shadow-lg p-2 sm:p-4 md:p-6 w-full max-w-xl relative">
 [2m202[0m | [33;1m|[0m               <button
 [2m203[0m | [33;1m|[0m                 className="absolute top-2 right-2 text-gray-700 hover:text-black text-2xl font-bold"
 [2m204[0m | [33;1m|[0m                 onClick={() => setSelected(null)}
 [2m205[0m | [33;1m|[0m                 aria-label="Close payment details"
 [2m206[0m | [33;1m|[0m               >
 [2m207[0m | [33;1m|[0m                 &times;
 [2m208[0m | [33;1m|[0m               </button>
 [2m209[0m | [33;1m|[0m               <h2 className="text-xl font-bold mb-2 text-black">Payment Details</h2>
 [2m210[0m | [33;1m|[0m               <div className="mb-2 text-gray-900 text-sm sm:text-base">
 [2m211[0m | [33;1m|[0m                 <strong>Reference:</strong> {selected.reference}<br />
 [2m212[0m | [33;1m|[0m                 <strong>Order:</strong> {selected.order_id ? (
 [2m213[0m | [33;1m|[0m                   <a href={`/admin/orders?search=${selected.order_id}`} className="underline text-blue-700 hover:text-blue-900">{selected.order_id}</a>
 [2m214[0m | [33;1m|[0m                 ) : "-"}<br />
 [2m215[0m | [33;1m|[0m                 <strong>Customer:</strong> {selected.email ? (
 [2m216[0m | [33;1m|[0m                   <a href={`/admin/customers?search=${selected.email}`} className="underline text-blue-700 hover:text-blue-900">{selected.email}</a>
 [2m217[0m | [33;1m|[0m                 ) : "-"}<br />
 [2m218[0m | [33;1m|[0m                 <strong>Amount:</strong> â‚¦{Number(selected.amount).toLocaleString()}<br />
 [2m219[0m | [33;1m|[0m                 <strong>Method:</strong> {selected.method || "-"}<br />
 [2m220[0m | [33;1m|[0m                 <strong>Status:</strong> <span className="capitalize">{selected.status}</span><br />
 [2m221[0m | [33;1m|[0m                 <strong>Date:</strong> {selected.created_at ? new Date(selected.created_at).toLocaleString() : "-"}<br />
 [2m222[0m | [33;1m|[0m                 {selected.metadata && (
 [2m223[0m | [33;1m|[0m                   <>
 [2m224[0m | [33;1m|[0m                     <strong>Metadata:</strong> <pre className="bg-gray-100 rounded p-2 text-xs overflow-x-auto">{JSON.stringify(selected.metadata, null, 2)}</pre>
 [2m225[0m | [33;1m|[0m                   </>
 [2m226[0m | [33;1m|[0m                 )}
 [2m227[0m | [33;1m|[0m               </div>
 [2m228[0m | [33;1m|[0m             </div>
 [2m229[0m | [33;1m|[0m           </div>
 [2m230[0m | [33;1m|[0m         )}
 [2m231[0m | [33;1m|[0m       </div>
 [2m232[0m | [33;1m|[0m     );
 [2m233[0m | [33;1m|[0m[33;1m-[0m[33;1m>[0m }
     : [33;1m`[0m[33;1m---[0m[33;1m-[0m [33;1mexported more than once[0m
     `----

Error: 
  [36m>[0m Exported identifiers must be unique

  [31mx[0m The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:54:1]
 [2m54[0m |     </div>
 [2m55[0m |   );
 [2m56[0m | }
 [2m57[0m | "use client";
    : [31;1m^^^^^^^^^^^^^[0m
 [2m58[0m | import { useState, useMemo } from "react";
 [2m59[0m | import { useQuery } from "@tanstack/react-query";
    `----

  [31mx[0m You're importing a component that needs useState. It only works in a Client Component but none of its parents are marked with "use client", so they're Server Components by default.
  [31m|[0m Learn more: https://nextjs.org/docs/getting-started/react-essentials
  [31m|[0m 
  [31m|[0m 
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:55:1]
 [2m55[0m |   );
 [2m56[0m | }
 [2m57[0m | "use client";
 [2m58[0m | import { useState, useMemo } from "react";
    : [31;1m         ^^^^^^^^[0m
 [2m59[0m | import { useQuery } from "@tanstack/react-query";
 [2m60[0m | 
 [2m61[0m | const fetchPayments = async (params: Record<string, string>) => {
    `----

Import trace for requested module:
./src/app/admin/payments/page.tsx
 GET /_next/static/webpack/036e5ffa2df02dd9.webpack.hot-update.json 500 in 665ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 GET /admin/payments 500 in 116ms
 â¨¯ ./src/app/admin/payments/page.tsx
Error: 
  [31mx[0m the name `React` is defined multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:1:1]
 [2m 1[0m | import React from 'react';
    : [31;1m       ^^|^^[0m
    :          [31;1m`-- [31;1mprevious definition of `React` here[0m[0m
 [2m 2[0m | import PaymentsClient from './PaymentsClient';
 [2m 3[0m | 
 [2m 4[0m | export default function AdminPaymentsPage() {
 [2m 5[0m |   return (
 [2m 6[0m |     <div className="p-6">
 [2m 7[0m |       <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 8[0m |       {/* Client-side interactive payments table */}
 [2m 9[0m |       <PaymentsClient />
 [2m10[0m |     </div>
 [2m11[0m |   );
 [2m12[0m | }
 [2m13[0m | import React from 'react';
    : [33;1m       ^^|^^[0m
    :          [33;1m`-- [33;1m`React` redefined here[0m[0m
 [2m14[0m | 
 [2m15[0m | async function fetchPayments() {
 [2m16[0m |   const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
    `----

  [31mx[0m the name `AdminPaymentsPage` is defined multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:1:1]
 [2m 1[0m | import React from 'react';
 [2m 2[0m | import PaymentsClient from './PaymentsClient';
 [2m 3[0m | 
 [2m 4[0m | export default function AdminPaymentsPage() {
    : [31;1m                        ^^^^^^^^|^^^^^^^^[0m
    :                                 [31;1m`-- [31;1mprevious definition of `AdminPaymentsPage` here[0m[0m
 [2m 5[0m |   return (
 [2m 6[0m |     <div className="p-6">
 [2m 7[0m |       <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 8[0m |       {/* Client-side interactive payments table */}
 [2m 9[0m |       <PaymentsClient />
 [2m10[0m |     </div>
 [2m11[0m |   );
 [2m12[0m | }
 [2m13[0m | import React from 'react';
 [2m14[0m | 
 [2m15[0m | async function fetchPayments() {
 [2m16[0m |   const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
 [2m17[0m |   if (!res.ok) throw new Error('Failed to fetch payments');
 [2m18[0m |   const j = await res.json();
 [2m19[0m |   return j.data || [];
 [2m20[0m | }
 [2m21[0m | 
 [2m22[0m | export default async function AdminPaymentsPage() {
    : [33;1m                              ^^^^^^^^|^^^^^^^^[0m
    :                                       [33;1m`-- [33;1m`AdminPaymentsPage` redefined here[0m[0m
 [2m23[0m |   const payments = await fetchPayments();
 [2m24[0m | 
 [2m25[0m |   return (
    `----

  [31mx[0m the name `fetchPayments` is defined multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:12:1]
 [2m12[0m | }
 [2m13[0m | import React from 'react';
 [2m14[0m | 
 [2m15[0m | async function fetchPayments() {
    : [31;1m               ^^^^^^|^^^^^^[0m
    :                      [31;1m`-- [31;1mprevious definition of `fetchPayments` here[0m[0m
 [2m16[0m |   const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
 [2m17[0m |   if (!res.ok) throw new Error('Failed to fetch payments');
 [2m18[0m |   const j = await res.json();
 [2m19[0m |   return j.data || [];
 [2m20[0m | }
 [2m21[0m | 
 [2m22[0m | export default async function AdminPaymentsPage() {
 [2m23[0m |   const payments = await fetchPayments();
 [2m24[0m | 
 [2m25[0m |   return (
 [2m26[0m |     <div className="p-6">
 [2m27[0m |       <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m28[0m |       <div className="overflow-auto">
 [2m29[0m |         <table className="min-w-full table-auto">
 [2m30[0m |           <thead>
 [2m31[0m |             <tr>
 [2m32[0m |               <th className="text-left px-2">Reference</th>
 [2m33[0m |               <th className="text-left px-2">Amount</th>
 [2m34[0m |               <th className="text-left px-2">Method</th>
 [2m35[0m |               <th className="text-left px-2">Status</th>
 [2m36[0m |               <th className="text-left px-2">Order</th>
 [2m37[0m |               <th className="text-left px-2">Created</th>
 [2m38[0m |             </tr>
 [2m39[0m |           </thead>
 [2m40[0m |           <tbody>
 [2m41[0m |             {payments.map((p: any) => (
 [2m42[0m |               <tr key={p.id} className="border-t">
 [2m43[0m |                 <td className="px-2 py-1">{p.reference}</td>
 [2m44[0m |                 <td className="px-2 py-1">{p.amount}</td>
 [2m45[0m |                 <td className="px-2 py-1">{p.payment_method}</td>
 [2m46[0m |                 <td className="px-2 py-1">{p.status}</td>
 [2m47[0m |                 <td className="px-2 py-1">{p.order_id}</td>
 [2m48[0m |                 <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m49[0m |               </tr>
 [2m50[0m |             ))}
 [2m51[0m |           </tbody>
 [2m52[0m |         </table>
 [2m53[0m |       </div>
 [2m54[0m |     </div>
 [2m55[0m |   );
 [2m56[0m | }
 [2m57[0m | "use client";
 [2m58[0m | import { useState, useMemo } from "react";
 [2m59[0m | import { useQuery } from "@tanstack/react-query";
 [2m60[0m | 
 [2m61[0m | const fetchPayments = async (params: Record<string, string>) => {
    : [33;1m      ^^^^^^|^^^^^^[0m
    :             [33;1m`-- [33;1m`fetchPayments` redefined here[0m[0m
 [2m62[0m |   const url = new URL("/api/payments", window.location.origin);
 [2m63[0m |   Object.entries(params).forEach(([k, v]) => v && url.searchParams.set(k, v));
 [2m64[0m |   const response = await fetch(url.toString());
    `----

  [31mx[0m the name `default` is exported multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:1:1]
 [2m 1[0m |     import React from 'react';
 [2m 2[0m |     import PaymentsClient from './PaymentsClient';
 [2m 3[0m |     
 [2m 4[0m | [31;1m,[0m[31;1m-[0m[31;1m>[0m export default function AdminPaymentsPage() {
 [2m 5[0m | [31;1m|[0m     return (
 [2m 6[0m | [31;1m|[0m       <div className="p-6">
 [2m 7[0m | [31;1m|[0m         <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 8[0m | [31;1m|[0m         {/* Client-side interactive payments table */}
 [2m 9[0m | [31;1m|[0m         <PaymentsClient />
 [2m10[0m | [31;1m|[0m       </div>
 [2m11[0m | [31;1m|[0m     );
 [2m12[0m | [31;1m|[0m[31;1m-[0m[31;1m>[0m }
    : [31;1m`[0m[31;1m---[0m[31;1m-[0m [31;1mprevious exported here[0m
 [2m13[0m |     import React from 'react';
 [2m14[0m |     
 [2m15[0m |     async function fetchPayments() {
 [2m16[0m |       const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
 [2m17[0m |       if (!res.ok) throw new Error('Failed to fetch payments');
 [2m18[0m |       const j = await res.json();
 [2m19[0m |       return j.data || [];
 [2m20[0m |     }
 [2m21[0m |     
 [2m22[0m | [33;1m,[0m[33;1m-[0m[33;1m>[0m export default async function AdminPaymentsPage() {
 [2m23[0m | [33;1m|[0m     const payments = await fetchPayments();
 [2m24[0m | [33;1m|[0m   
 [2m25[0m | [33;1m|[0m     return (
 [2m26[0m | [33;1m|[0m       <div className="p-6">
 [2m27[0m | [33;1m|[0m         <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m28[0m | [33;1m|[0m         <div className="overflow-auto">
 [2m29[0m | [33;1m|[0m           <table className="min-w-full table-auto">
 [2m30[0m | [33;1m|[0m             <thead>
 [2m31[0m | [33;1m|[0m               <tr>
 [2m32[0m | [33;1m|[0m                 <th className="text-left px-2">Reference</th>
 [2m33[0m | [33;1m|[0m                 <th className="text-left px-2">Amount</th>
 [2m34[0m | [33;1m|[0m                 <th className="text-left px-2">Method</th>
 [2m35[0m | [33;1m|[0m                 <th className="text-left px-2">Status</th>
 [2m36[0m | [33;1m|[0m                 <th className="text-left px-2">Order</th>
 [2m37[0m | [33;1m|[0m                 <th className="text-left px-2">Created</th>
 [2m38[0m | [33;1m|[0m               </tr>
 [2m39[0m | [33;1m|[0m             </thead>
 [2m40[0m | [33;1m|[0m             <tbody>
 [2m41[0m | [33;1m|[0m               {payments.map((p: any) => (
 [2m42[0m | [33;1m|[0m                 <tr key={p.id} className="border-t">
 [2m43[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.reference}</td>
 [2m44[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.amount}</td>
 [2m45[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.payment_method}</td>
 [2m46[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.status}</td>
 [2m47[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.order_id}</td>
 [2m48[0m | [33;1m|[0m                   <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m49[0m | [33;1m|[0m                 </tr>
 [2m50[0m | [33;1m|[0m               ))}
 [2m51[0m | [33;1m|[0m             </tbody>
 [2m52[0m | [33;1m|[0m           </table>
 [2m53[0m | [33;1m|[0m         </div>
 [2m54[0m | [33;1m|[0m       </div>
 [2m55[0m | [33;1m|[0m     );
 [2m56[0m | [33;1m|[0m[33;1m-[0m[33;1m>[0m }
    : [33;1m`[0m[33;1m---[0m[33;1m-[0m [33;1mexported more than once[0m
 [2m57[0m |     "use client";
 [2m58[0m |     import { useState, useMemo } from "react";
 [2m59[0m |     import { useQuery } from "@tanstack/react-query";
    `----

Error: 
  [36m>[0m Exported identifiers must be unique

  [31mx[0m the name `default` is exported multiple times
     ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:19:1]
 [2m 19[0m |       return j.data || [];
 [2m 20[0m |     }
 [2m 21[0m |     
 [2m 22[0m | [31;1m,[0m[31;1m-[0m[31;1m>[0m export default async function AdminPaymentsPage() {
 [2m 23[0m | [31;1m|[0m     const payments = await fetchPayments();
 [2m 24[0m | [31;1m|[0m   
 [2m 25[0m | [31;1m|[0m     return (
 [2m 26[0m | [31;1m|[0m       <div className="p-6">
 [2m 27[0m | [31;1m|[0m         <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 28[0m | [31;1m|[0m         <div className="overflow-auto">
 [2m 29[0m | [31;1m|[0m           <table className="min-w-full table-auto">
 [2m 30[0m | [31;1m|[0m             <thead>
 [2m 31[0m | [31;1m|[0m               <tr>
 [2m 32[0m | [31;1m|[0m                 <th className="text-left px-2">Reference</th>
 [2m 33[0m | [31;1m|[0m                 <th className="text-left px-2">Amount</th>
 [2m 34[0m | [31;1m|[0m                 <th className="text-left px-2">Method</th>
 [2m 35[0m | [31;1m|[0m                 <th className="text-left px-2">Status</th>
 [2m 36[0m | [31;1m|[0m                 <th className="text-left px-2">Order</th>
 [2m 37[0m | [31;1m|[0m                 <th className="text-left px-2">Created</th>
 [2m 38[0m | [31;1m|[0m               </tr>
 [2m 39[0m | [31;1m|[0m             </thead>
 [2m 40[0m | [31;1m|[0m             <tbody>
 [2m 41[0m | [31;1m|[0m               {payments.map((p: any) => (
 [2m 42[0m | [31;1m|[0m                 <tr key={p.id} className="border-t">
 [2m 43[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.reference}</td>
 [2m 44[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.amount}</td>
 [2m 45[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.payment_method}</td>
 [2m 46[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.status}</td>
 [2m 47[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.order_id}</td>
 [2m 48[0m | [31;1m|[0m                   <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m 49[0m | [31;1m|[0m                 </tr>
 [2m 50[0m | [31;1m|[0m               ))}
 [2m 51[0m | [31;1m|[0m             </tbody>
 [2m 52[0m | [31;1m|[0m           </table>
 [2m 53[0m | [31;1m|[0m         </div>
 [2m 54[0m | [31;1m|[0m       </div>
 [2m 55[0m | [31;1m|[0m     );
 [2m 56[0m | [31;1m|[0m[31;1m-[0m[31;1m>[0m }
     : [31;1m`[0m[31;1m---[0m[31;1m-[0m [31;1mprevious exported here[0m
 [2m 57[0m |     "use client";
 [2m 58[0m |     import { useState, useMemo } from "react";
 [2m 59[0m |     import { useQuery } from "@tanstack/react-query";
 [2m 60[0m |     
 [2m 61[0m |     const fetchPayments = async (params: Record<string, string>) => {
 [2m 62[0m |       const url = new URL("/api/payments", window.location.origin);
 [2m 63[0m |       Object.entries(params).forEach(([k, v]) => v && url.searchParams.set(k, v));
 [2m 64[0m |       const response = await fetch(url.toString());
 [2m 65[0m |       if (!response.ok) throw new Error("Failed to fetch payments");
 [2m 66[0m |       const data = await response.json();
 [2m 67[0m |       return Array.isArray(data.data) ? data.data : data;
 [2m 68[0m |     };
 [2m 69[0m |     
 [2m 70[0m | [33;1m,[0m[33;1m-[0m[33;1m>[0m export default function PaymentsPage() {
 [2m 71[0m | [33;1m|[0m     const [filter, setFilter] = useState({ status: "", email: "" });
 [2m 72[0m | [33;1m|[0m     const [search, setSearch] = useState("");
 [2m 73[0m | [33;1m|[0m     const [selected, setSelected] = useState<any>(null);
 [2m 74[0m | [33;1m|[0m   
 [2m 75[0m | [33;1m|[0m     const { data: payments = [], error, isLoading, refetch } = useQuery({
 [2m 76[0m | [33;1m|[0m       queryKey: ["payments", filter, search],
 [2m 77[0m | [33;1m|[0m       queryFn: () => fetchPayments({ ...filter, email: search }),
 [2m 78[0m | [33;1m|[0m     });
 [2m 79[0m | [33;1m|[0m   
 [2m 80[0m | [33;1m|[0m     // Analytics summary
 [2m 81[0m | [33;1m|[0m     const analytics = useMemo(() => {
 [2m 82[0m | [33;1m|[0m       let total = 0, byStatus: Record<string, number> = {}, byMethod: Record<string, number> = {}, topCustomers: Record<string, number> = {};
 [2m 83[0m | [33;1m|[0m       payments.forEach((p: any) => {
 [2m 84[0m | [33;1m|[0m         total += Number(p.amount) || 0;
 [2m 85[0m | [33;1m|[0m         byStatus[p.status] = (byStatus[p.status] || 0) + 1;
 [2m 86[0m | [33;1m|[0m         byMethod[p.method || "other"] = (byMethod[p.method || "other"] || 0) + 1;
 [2m 87[0m | [33;1m|[0m         if (p.email) topCustomers[p.email] = (topCustomers[p.email] || 0) + 1;
 [2m 88[0m | [33;1m|[0m       });
 [2m 89[0m | [33;1m|[0m       const topCustomersArr = Object.entries(topCustomers).sort((a, b) => b[1] - a[1]).slice(0, 3);
 [2m 90[0m | [33;1m|[0m       return { total, byStatus, byMethod, topCustomersArr };
 [2m 91[0m | [33;1m|[0m     }, [payments]);
 [2m 92[0m | [33;1m|[0m   
 [2m 93[0m | [33;1m|[0m     return (
 [2m 94[0m | [33;1m|[0m       <div className="px-1 sm:px-2 md:px-4">
 [2m 95[0m | [33;1m|[0m         <h1 className="text-2xl font-bold mb-2 text-black">Payment Management</h1>
 [2m 96[0m | [33;1m|[0m         {/* Analytics */}
 [2m 97[0m | [33;1m|[0m         <div className="mb-4 grid grid-cols-1 gap-2 sm:gap-4 md:grid-cols-4">
 [2m 98[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m 99[0m | [33;1m|[0m             <div className="text-xs text-gray-500">Total Payments</div>
 [2m100[0m | [33;1m|[0m             <div className="text-xl font-bold text-green-700">â‚¦{analytics.total.toLocaleString()}</div>
 [2m101[0m | [33;1m|[0m           </div>
 [2m102[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m103[0m | [33;1m|[0m             <div className="text-xs text-gray-500">By Status</div>
 [2m104[0m | [33;1m|[0m             <ul className="text-sm">
 [2m105[0m | [33;1m|[0m               {Object.entries(analytics.byStatus).map(([status, count]) => (
 [2m106[0m | [33;1m|[0m                 <li key={status}><span className="capitalize">{status}</span>: <span className="font-bold">{count}</span></li>
 [2m107[0m | [33;1m|[0m               ))}
 [2m108[0m | [33;1m|[0m             </ul>
 [2m109[0m | [33;1m|[0m           </div>
 [2m110[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m111[0m | [33;1m|[0m             <div className="text-xs text-gray-500">By Method</div>
 [2m112[0m | [33;1m|[0m             <ul className="text-sm">
 [2m113[0m | [33;1m|[0m               {Object.entries(analytics.byMethod).map(([method, count]) => (
 [2m114[0m | [33;1m|[0m                 <li key={method}><span className="capitalize">{method}</span>: <span className="font-bold">{count}</span></li>
 [2m115[0m | [33;1m|[0m               ))}
 [2m116[0m | [33;1m|[0m             </ul>
 [2m117[0m | [33;1m|[0m           </div>
 [2m118[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m119[0m | [33;1m|[0m             <div className="text-xs text-gray-500">Top Customers</div>
 [2m120[0m | [33;1m|[0m             <ul className="text-sm">
 [2m121[0m | [33;1m|[0m               {analytics.topCustomersArr.map(([email, count]) => (
 [2m122[0m | [33;1m|[0m                 <li key={email}>{email}: <span className="font-bold">{count}</span></li>
 [2m123[0m | [33;1m|[0m               ))}
 [2m124[0m | [33;1m|[0m             </ul>
 [2m125[0m | [33;1m|[0m           </div>
 [2m126[0m | [33;1m|[0m         </div>
 [2m127[0m | [33;1m|[0m         {/* Filters/Search */}
 [2m128[0m | [33;1m|[0m         <div className="mb-4 flex flex-col gap-2 sm:flex-row sm:gap-4">
 [2m129[0m | [33;1m|[0m           <input
 [2m130[0m | [33;1m|[0m             type="text"
 [2m131[0m | [33;1m|[0m             placeholder="Search by email, reference, or order ID"
 [2m132[0m | [33;1m|[0m             className="border rounded-lg px-3 py-2 text-gray-900 bg-white placeholder:text-gray-400 w-full sm:w-72"
 [2m133[0m | [33;1m|[0m             value={search}
 [2m134[0m | [33;1m|[0m             onChange={e => setSearch(e.target.value)}
 [2m135[0m | [33;1m|[0m           />
 [2m136[0m | [33;1m|[0m           <select
 [2m137[0m | [33;1m|[0m             className="border rounded-lg px-3 py-2 text-gray-900 bg-white w-full sm:w-48"
 [2m138[0m | [33;1m|[0m             value={filter.status}
 [2m139[0m | [33;1m|[0m             onChange={e => setFilter(f => ({ ...f, status: e.target.value }))}
 [2m140[0m | [33;1m|[0m           >
 [2m141[0m | [33;1m|[0m             <option value="">All Statuses</option>
 [2m142[0m | [33;1m|[0m             <option value="pending">Pending</option>
 [2m143[0m | [33;1m|[0m             <option value="success">Success</option>
 [2m144[0m | [33;1m|[0m             <option value="failed">Failed</option>
 [2m145[0m | [33;1m|[0m           </select>
 [2m146[0m | [33;1m|[0m         </div>
 [2m147[0m | [33;1m|[0m         {/* Table */}
 [2m148[0m | [33;1m|[0m         <div className="bg-white rounded-xl shadow p-2 sm:p-4 md:p-6 border border-blue_gray-100 overflow-x-auto">
 [2m149[0m | [33;1m|[0m           {isLoading ? (
 [2m150[0m | [33;1m|[0m             <div className="text-gray-900 text-base">Loading payments...</div>
 [2m151[0m | [33;1m|[0m           ) : error ? (
 [2m152[0m | [33;1m|[0m             <div className="text-red-600 mb-2">Failed to load payments</div>
 [2m153[0m | [33;1m|[0m           ) : payments.length === 0 ? (
 [2m154[0m | [33;1m|[0m             <div className="text-gray-700">No payments found.</div>
 [2m155[0m | [33;1m|[0m           ) : (
 [2m156[0m | [33;1m|[0m             <div className="w-full overflow-x-auto">
 [2m157[0m | [33;1m|[0m               <table className="min-w-[700px] w-full text-left text-sm text-gray-900">
 [2m158[0m | [33;1m|[0m                 <thead>
 [2m159[0m | [33;1m|[0m                   <tr>
 [2m160[0m | [33;1m|[0m                     <th className="py-2 font-bold">Reference</th>
 [2m161[0m | [33;1m|[0m                     <th className="py-2 font-bold">Order</th>
 [2m162[0m | [33;1m|[0m                     <th className="py-2 font-bold">Customer</th>
 [2m163[0m | [33;1m|[0m                     <th className="py-2 font-bold">Amount</th>
 [2m164[0m | [33;1m|[0m                     <th className="py-2 font-bold">Method</th>
 [2m165[0m | [33;1m|[0m                     <th className="py-2 font-bold">Status</th>
 [2m166[0m | [33;1m|[0m                     <th className="py-2 font-bold">Date</th>
 [2m167[0m | [33;1m|[0m                     <th className="py-2 font-bold">Actions</th>
 [2m168[0m | [33;1m|[0m                   </tr>
 [2m169[0m | [33;1m|[0m                 </thead>
 [2m170[0m | [33;1m|[0m                 <tbody>
 [2m171[0m | [33;1m|[0m                   {payments.map((pay: any) => (
 [2m172[0m | [33;1m|[0m                     <tr key={pay.reference} className="border-t">
 [2m173[0m | [33;1m|[0m                       <td className="py-2">{pay.reference}</td>
 [2m174[0m | [33;1m|[0m                       <td className="py-2">
 [2m175[0m | [33;1m|[0m                         {pay.order_id ? (
 [2m176[0m | [33;1m|[0m                           <a href={`/admin/orders?search=${pay.order_id}`} className="underline text-blue-700 hover:text-blue-900" title="View order">{pay.order_id}</a>
 [2m177[0m | [33;1m|[0m                         ) : "-"}
 [2m178[0m | [33;1m|[0m                       </td>
 [2m179[0m | [33;1m|[0m                       <td className="py-2">
 [2m180[0m | [33;1m|[0m                         {pay.email ? (
 [2m181[0m | [33;1m|[0m                           <a href={`/admin/customers?search=${pay.email}`} className="underline text-blue-700 hover:text-blue-900" title="View customer">{pay.email}</a>
 [2m182[0m | [33;1m|[0m                         ) : "-"}
 [2m183[0m | [33;1m|[0m                       </td>
 [2m184[0m | [33;1m|[0m                       <td className="py-2">â‚¦{Number(pay.amount).toLocaleString()}</td>
 [2m185[0m | [33;1m|[0m                       <td className="py-2">{pay.method || "-"}</td>
 [2m186[0m | [33;1m|[0m                       <td className="py-2 capitalize">{pay.status}</td>
 [2m187[0m | [33;1m|[0m                       <td className="py-2">{pay.created_at ? new Date(pay.created_at).toLocaleString() : "-"}</td>
 [2m188[0m | [33;1m|[0m                       <td className="py-2">
 [2m189[0m | [33;1m|[0m                         <button className="underline text-blue-700 hover:text-blue-900" onClick={() => setSelected(pay)}>View</button>
 [2m190[0m | [33;1m|[0m                       </td>
 [2m191[0m | [33;1m|[0m                     </tr>
 [2m192[0m | [33;1m|[0m                   ))}
 [2m193[0m | [33;1m|[0m                 </tbody>
 [2m194[0m | [33;1m|[0m               </table>
 [2m195[0m | [33;1m|[0m             </div>
 [2m196[0m | [33;1m|[0m           )}
 [2m197[0m | [33;1m|[0m         </div>
 [2m198[0m | [33;1m|[0m         {/* Payment Details Modal */}
 [2m199[0m | [33;1m|[0m         {selected && (
 [2m200[0m | [33;1m|[0m           <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 px-2 sm:px-0">
 [2m201[0m | [33;1m|[0m             <div className="bg-white rounded-xl shadow-lg p-2 sm:p-4 md:p-6 w-full max-w-xl relative">
 [2m202[0m | [33;1m|[0m               <button
 [2m203[0m | [33;1m|[0m                 className="absolute top-2 right-2 text-gray-700 hover:text-black text-2xl font-bold"
 [2m204[0m | [33;1m|[0m                 onClick={() => setSelected(null)}
 [2m205[0m | [33;1m|[0m                 aria-label="Close payment details"
 [2m206[0m | [33;1m|[0m               >
 [2m207[0m | [33;1m|[0m                 &times;
 [2m208[0m | [33;1m|[0m               </button>
 [2m209[0m | [33;1m|[0m               <h2 className="text-xl font-bold mb-2 text-black">Payment Details</h2>
 [2m210[0m | [33;1m|[0m               <div className="mb-2 text-gray-900 text-sm sm:text-base">
 [2m211[0m | [33;1m|[0m                 <strong>Reference:</strong> {selected.reference}<br />
 [2m212[0m | [33;1m|[0m                 <strong>Order:</strong> {selected.order_id ? (
 [2m213[0m | [33;1m|[0m                   <a href={`/admin/orders?search=${selected.order_id}`} className="underline text-blue-700 hover:text-blue-900">{selected.order_id}</a>
 [2m214[0m | [33;1m|[0m                 ) : "-"}<br />
 [2m215[0m | [33;1m|[0m                 <strong>Customer:</strong> {selected.email ? (
 [2m216[0m | [33;1m|[0m                   <a href={`/admin/customers?search=${selected.email}`} className="underline text-blue-700 hover:text-blue-900">{selected.email}</a>
 [2m217[0m | [33;1m|[0m                 ) : "-"}<br />
 [2m218[0m | [33;1m|[0m                 <strong>Amount:</strong> â‚¦{Number(selected.amount).toLocaleString()}<br />
 [2m219[0m | [33;1m|[0m                 <strong>Method:</strong> {selected.method || "-"}<br />
 [2m220[0m | [33;1m|[0m                 <strong>Status:</strong> <span className="capitalize">{selected.status}</span><br />
 [2m221[0m | [33;1m|[0m                 <strong>Date:</strong> {selected.created_at ? new Date(selected.created_at).toLocaleString() : "-"}<br />
 [2m222[0m | [33;1m|[0m                 {selected.metadata && (
 [2m223[0m | [33;1m|[0m                   <>
 [2m224[0m | [33;1m|[0m                     <strong>Metadata:</strong> <pre className="bg-gray-100 rounded p-2 text-xs overflow-x-auto">{JSON.stringify(selected.metadata, null, 2)}</pre>
 [2m225[0m | [33;1m|[0m                   </>
 [2m226[0m | [33;1m|[0m                 )}
 [2m227[0m | [33;1m|[0m               </div>
 [2m228[0m | [33;1m|[0m             </div>
 [2m229[0m | [33;1m|[0m           </div>
 [2m230[0m | [33;1m|[0m         )}
 [2m231[0m | [33;1m|[0m       </div>
 [2m232[0m | [33;1m|[0m     );
 [2m233[0m | [33;1m|[0m[33;1m-[0m[33;1m>[0m }
     : [33;1m`[0m[33;1m---[0m[33;1m-[0m [33;1mexported more than once[0m
     `----

Error: 
  [36m>[0m Exported identifiers must be unique

  [31mx[0m The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:54:1]
 [2m54[0m |     </div>
 [2m55[0m |   );
 [2m56[0m | }
 [2m57[0m | "use client";
    : [31;1m^^^^^^^^^^^^^[0m
 [2m58[0m | import { useState, useMemo } from "react";
 [2m59[0m | import { useQuery } from "@tanstack/react-query";
    `----

  [31mx[0m You're importing a component that needs useState. It only works in a Client Component but none of its parents are marked with "use client", so they're Server Components by default.
  [31m|[0m Learn more: https://nextjs.org/docs/getting-started/react-essentials
  [31m|[0m 
  [31m|[0m 
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:55:1]
 [2m55[0m |   );
 [2m56[0m | }
 [2m57[0m | "use client";
 [2m58[0m | import { useState, useMemo } from "react";
    : [31;1m         ^^^^^^^^[0m
 [2m59[0m | import { useQuery } from "@tanstack/react-query";
 [2m60[0m | 
 [2m61[0m | const fetchPayments = async (params: Record<string, string>) => {
    `----

Import trace for requested module:
./src/app/admin/payments/page.tsx
 GET /_next/static/webpack/036e5ffa2df02dd9.webpack.hot-update.json 500 in 719ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 GET /admin/payments 500 in 42ms
 âœ“ Compiled /favicon.ico in 280ms (542 modules)
 GET /admin/payments 500 in 65ms
 âœ“ Compiled in 289ms (542 modules)
 GET /admin/payments 500 in 31ms
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 1443ms (946 modules)
 GET /_next/static/webpack/036e5ffa2df02dd9.webpack.hot-update.json 404 in 1508ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 â¨¯ ./src/app/admin/payments/page.tsx
Error: 
  [31mx[0m the name `React` is defined multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:1:1]
 [2m 1[0m | import React from 'react';
    : [31;1m       ^^|^^[0m
    :          [31;1m`-- [31;1mprevious definition of `React` here[0m[0m
 [2m 2[0m | import PaymentsClient from './PaymentsClient';
 [2m 3[0m | 
 [2m 4[0m | export default function AdminPaymentsPage() {
 [2m 5[0m |   return (
 [2m 6[0m |     <div className="p-6">
 [2m 7[0m |       <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 8[0m |       {/* Client-side interactive payments table */}
 [2m 9[0m |       <PaymentsClient />
 [2m10[0m |     </div>
 [2m11[0m |   );
 [2m12[0m | }
 [2m13[0m | import React from 'react';
    : [33;1m       ^^|^^[0m
    :          [33;1m`-- [33;1m`React` redefined here[0m[0m
 [2m14[0m | 
 [2m15[0m | async function fetchPayments() {
 [2m16[0m |   const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
    `----

  [31mx[0m the name `AdminPaymentsPage` is defined multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:1:1]
 [2m 1[0m | import React from 'react';
 [2m 2[0m | import PaymentsClient from './PaymentsClient';
 [2m 3[0m | 
 [2m 4[0m | export default function AdminPaymentsPage() {
    : [31;1m                        ^^^^^^^^|^^^^^^^^[0m
    :                                 [31;1m`-- [31;1mprevious definition of `AdminPaymentsPage` here[0m[0m
 [2m 5[0m |   return (
 [2m 6[0m |     <div className="p-6">
 [2m 7[0m |       <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 8[0m |       {/* Client-side interactive payments table */}
 [2m 9[0m |       <PaymentsClient />
 [2m10[0m |     </div>
 [2m11[0m |   );
 [2m12[0m | }
 [2m13[0m | import React from 'react';
 [2m14[0m | 
 [2m15[0m | async function fetchPayments() {
 [2m16[0m |   const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
 [2m17[0m |   if (!res.ok) throw new Error('Failed to fetch payments');
 [2m18[0m |   const j = await res.json();
 [2m19[0m |   return j.data || [];
 [2m20[0m | }
 [2m21[0m | 
 [2m22[0m | export default async function AdminPaymentsPage() {
    : [33;1m                              ^^^^^^^^|^^^^^^^^[0m
    :                                       [33;1m`-- [33;1m`AdminPaymentsPage` redefined here[0m[0m
 [2m23[0m |   const payments = await fetchPayments();
 [2m24[0m | 
 [2m25[0m |   return (
    `----

  [31mx[0m the name `fetchPayments` is defined multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:12:1]
 [2m12[0m | }
 [2m13[0m | import React from 'react';
 [2m14[0m | 
 [2m15[0m | async function fetchPayments() {
    : [31;1m               ^^^^^^|^^^^^^[0m
    :                      [31;1m`-- [31;1mprevious definition of `fetchPayments` here[0m[0m
 [2m16[0m |   const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
 [2m17[0m |   if (!res.ok) throw new Error('Failed to fetch payments');
 [2m18[0m |   const j = await res.json();
 [2m19[0m |   return j.data || [];
 [2m20[0m | }
 [2m21[0m | 
 [2m22[0m | export default async function AdminPaymentsPage() {
 [2m23[0m |   const payments = await fetchPayments();
 [2m24[0m | 
 [2m25[0m |   return (
 [2m26[0m |     <div className="p-6">
 [2m27[0m |       <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m28[0m |       <div className="overflow-auto">
 [2m29[0m |         <table className="min-w-full table-auto">
 [2m30[0m |           <thead>
 [2m31[0m |             <tr>
 [2m32[0m |               <th className="text-left px-2">Reference</th>
 [2m33[0m |               <th className="text-left px-2">Amount</th>
 [2m34[0m |               <th className="text-left px-2">Method</th>
 [2m35[0m |               <th className="text-left px-2">Status</th>
 [2m36[0m |               <th className="text-left px-2">Order</th>
 [2m37[0m |               <th className="text-left px-2">Created</th>
 [2m38[0m |             </tr>
 [2m39[0m |           </thead>
 [2m40[0m |           <tbody>
 [2m41[0m |             {payments.map((p: any) => (
 [2m42[0m |               <tr key={p.id} className="border-t">
 [2m43[0m |                 <td className="px-2 py-1">{p.reference}</td>
 [2m44[0m |                 <td className="px-2 py-1">{p.amount}</td>
 [2m45[0m |                 <td className="px-2 py-1">{p.payment_method}</td>
 [2m46[0m |                 <td className="px-2 py-1">{p.status}</td>
 [2m47[0m |                 <td className="px-2 py-1">{p.order_id}</td>
 [2m48[0m |                 <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m49[0m |               </tr>
 [2m50[0m |             ))}
 [2m51[0m |           </tbody>
 [2m52[0m |         </table>
 [2m53[0m |       </div>
 [2m54[0m |     </div>
 [2m55[0m |   );
 [2m56[0m | }
 [2m57[0m | "use client";
 [2m58[0m | import { useState, useMemo } from "react";
 [2m59[0m | import { useQuery } from "@tanstack/react-query";
 [2m60[0m | 
 [2m61[0m | const fetchPayments = async (params: Record<string, string>) => {
    : [33;1m      ^^^^^^|^^^^^^[0m
    :             [33;1m`-- [33;1m`fetchPayments` redefined here[0m[0m
 [2m62[0m |   const url = new URL("/api/payments", window.location.origin);
 [2m63[0m |   Object.entries(params).forEach(([k, v]) => v && url.searchParams.set(k, v));
 [2m64[0m |   const response = await fetch(url.toString());
    `----

  [31mx[0m the name `default` is exported multiple times
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:1:1]
 [2m 1[0m |     import React from 'react';
 [2m 2[0m |     import PaymentsClient from './PaymentsClient';
 [2m 3[0m |     
 [2m 4[0m | [31;1m,[0m[31;1m-[0m[31;1m>[0m export default function AdminPaymentsPage() {
 [2m 5[0m | [31;1m|[0m     return (
 [2m 6[0m | [31;1m|[0m       <div className="p-6">
 [2m 7[0m | [31;1m|[0m         <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 8[0m | [31;1m|[0m         {/* Client-side interactive payments table */}
 [2m 9[0m | [31;1m|[0m         <PaymentsClient />
 [2m10[0m | [31;1m|[0m       </div>
 [2m11[0m | [31;1m|[0m     );
 [2m12[0m | [31;1m|[0m[31;1m-[0m[31;1m>[0m }
    : [31;1m`[0m[31;1m---[0m[31;1m-[0m [31;1mprevious exported here[0m
 [2m13[0m |     import React from 'react';
 [2m14[0m |     
 [2m15[0m |     async function fetchPayments() {
 [2m16[0m |       const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ''}/api/payments?limit=100`, { cache: 'no-store' });
 [2m17[0m |       if (!res.ok) throw new Error('Failed to fetch payments');
 [2m18[0m |       const j = await res.json();
 [2m19[0m |       return j.data || [];
 [2m20[0m |     }
 [2m21[0m |     
 [2m22[0m | [33;1m,[0m[33;1m-[0m[33;1m>[0m export default async function AdminPaymentsPage() {
 [2m23[0m | [33;1m|[0m     const payments = await fetchPayments();
 [2m24[0m | [33;1m|[0m   
 [2m25[0m | [33;1m|[0m     return (
 [2m26[0m | [33;1m|[0m       <div className="p-6">
 [2m27[0m | [33;1m|[0m         <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m28[0m | [33;1m|[0m         <div className="overflow-auto">
 [2m29[0m | [33;1m|[0m           <table className="min-w-full table-auto">
 [2m30[0m | [33;1m|[0m             <thead>
 [2m31[0m | [33;1m|[0m               <tr>
 [2m32[0m | [33;1m|[0m                 <th className="text-left px-2">Reference</th>
 [2m33[0m | [33;1m|[0m                 <th className="text-left px-2">Amount</th>
 [2m34[0m | [33;1m|[0m                 <th className="text-left px-2">Method</th>
 [2m35[0m | [33;1m|[0m                 <th className="text-left px-2">Status</th>
 [2m36[0m | [33;1m|[0m                 <th className="text-left px-2">Order</th>
 [2m37[0m | [33;1m|[0m                 <th className="text-left px-2">Created</th>
 [2m38[0m | [33;1m|[0m               </tr>
 [2m39[0m | [33;1m|[0m             </thead>
 [2m40[0m | [33;1m|[0m             <tbody>
 [2m41[0m | [33;1m|[0m               {payments.map((p: any) => (
 [2m42[0m | [33;1m|[0m                 <tr key={p.id} className="border-t">
 [2m43[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.reference}</td>
 [2m44[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.amount}</td>
 [2m45[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.payment_method}</td>
 [2m46[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.status}</td>
 [2m47[0m | [33;1m|[0m                   <td className="px-2 py-1">{p.order_id}</td>
 [2m48[0m | [33;1m|[0m                   <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m49[0m | [33;1m|[0m                 </tr>
 [2m50[0m | [33;1m|[0m               ))}
 [2m51[0m | [33;1m|[0m             </tbody>
 [2m52[0m | [33;1m|[0m           </table>
 [2m53[0m | [33;1m|[0m         </div>
 [2m54[0m | [33;1m|[0m       </div>
 [2m55[0m | [33;1m|[0m     );
 [2m56[0m | [33;1m|[0m[33;1m-[0m[33;1m>[0m }
    : [33;1m`[0m[33;1m---[0m[33;1m-[0m [33;1mexported more than once[0m
 [2m57[0m |     "use client";
 [2m58[0m |     import { useState, useMemo } from "react";
 [2m59[0m |     import { useQuery } from "@tanstack/react-query";
    `----

Error: 
  [36m>[0m Exported identifiers must be unique

  [31mx[0m the name `default` is exported multiple times
     ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:19:1]
 [2m 19[0m |       return j.data || [];
 [2m 20[0m |     }
 [2m 21[0m |     
 [2m 22[0m | [31;1m,[0m[31;1m-[0m[31;1m>[0m export default async function AdminPaymentsPage() {
 [2m 23[0m | [31;1m|[0m     const payments = await fetchPayments();
 [2m 24[0m | [31;1m|[0m   
 [2m 25[0m | [31;1m|[0m     return (
 [2m 26[0m | [31;1m|[0m       <div className="p-6">
 [2m 27[0m | [31;1m|[0m         <h1 className="text-2xl font-semibold mb-4">Payments</h1>
 [2m 28[0m | [31;1m|[0m         <div className="overflow-auto">
 [2m 29[0m | [31;1m|[0m           <table className="min-w-full table-auto">
 [2m 30[0m | [31;1m|[0m             <thead>
 [2m 31[0m | [31;1m|[0m               <tr>
 [2m 32[0m | [31;1m|[0m                 <th className="text-left px-2">Reference</th>
 [2m 33[0m | [31;1m|[0m                 <th className="text-left px-2">Amount</th>
 [2m 34[0m | [31;1m|[0m                 <th className="text-left px-2">Method</th>
 [2m 35[0m | [31;1m|[0m                 <th className="text-left px-2">Status</th>
 [2m 36[0m | [31;1m|[0m                 <th className="text-left px-2">Order</th>
 [2m 37[0m | [31;1m|[0m                 <th className="text-left px-2">Created</th>
 [2m 38[0m | [31;1m|[0m               </tr>
 [2m 39[0m | [31;1m|[0m             </thead>
 [2m 40[0m | [31;1m|[0m             <tbody>
 [2m 41[0m | [31;1m|[0m               {payments.map((p: any) => (
 [2m 42[0m | [31;1m|[0m                 <tr key={p.id} className="border-t">
 [2m 43[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.reference}</td>
 [2m 44[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.amount}</td>
 [2m 45[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.payment_method}</td>
 [2m 46[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.status}</td>
 [2m 47[0m | [31;1m|[0m                   <td className="px-2 py-1">{p.order_id}</td>
 [2m 48[0m | [31;1m|[0m                   <td className="px-2 py-1">{new Date(p.created_at).toLocaleString()}</td>
 [2m 49[0m | [31;1m|[0m                 </tr>
 [2m 50[0m | [31;1m|[0m               ))}
 [2m 51[0m | [31;1m|[0m             </tbody>
 [2m 52[0m | [31;1m|[0m           </table>
 [2m 53[0m | [31;1m|[0m         </div>
 [2m 54[0m | [31;1m|[0m       </div>
 [2m 55[0m | [31;1m|[0m     );
 [2m 56[0m | [31;1m|[0m[31;1m-[0m[31;1m>[0m }
     : [31;1m`[0m[31;1m---[0m[31;1m-[0m [31;1mprevious exported here[0m
 [2m 57[0m |     "use client";
 [2m 58[0m |     import { useState, useMemo } from "react";
 [2m 59[0m |     import { useQuery } from "@tanstack/react-query";
 [2m 60[0m |     
 [2m 61[0m |     const fetchPayments = async (params: Record<string, string>) => {
 [2m 62[0m |       const url = new URL("/api/payments", window.location.origin);
 [2m 63[0m |       Object.entries(params).forEach(([k, v]) => v && url.searchParams.set(k, v));
 [2m 64[0m |       const response = await fetch(url.toString());
 [2m 65[0m |       if (!response.ok) throw new Error("Failed to fetch payments");
 [2m 66[0m |       const data = await response.json();
 [2m 67[0m |       return Array.isArray(data.data) ? data.data : data;
 [2m 68[0m |     };
 [2m 69[0m |     
 [2m 70[0m | [33;1m,[0m[33;1m-[0m[33;1m>[0m export default function PaymentsPage() {
 [2m 71[0m | [33;1m|[0m     const [filter, setFilter] = useState({ status: "", email: "" });
 [2m 72[0m | [33;1m|[0m     const [search, setSearch] = useState("");
 [2m 73[0m | [33;1m|[0m     const [selected, setSelected] = useState<any>(null);
 [2m 74[0m | [33;1m|[0m   
 [2m 75[0m | [33;1m|[0m     const { data: payments = [], error, isLoading, refetch } = useQuery({
 [2m 76[0m | [33;1m|[0m       queryKey: ["payments", filter, search],
 [2m 77[0m | [33;1m|[0m       queryFn: () => fetchPayments({ ...filter, email: search }),
 [2m 78[0m | [33;1m|[0m     });
 [2m 79[0m | [33;1m|[0m   
 [2m 80[0m | [33;1m|[0m     // Analytics summary
 [2m 81[0m | [33;1m|[0m     const analytics = useMemo(() => {
 [2m 82[0m | [33;1m|[0m       let total = 0, byStatus: Record<string, number> = {}, byMethod: Record<string, number> = {}, topCustomers: Record<string, number> = {};
 [2m 83[0m | [33;1m|[0m       payments.forEach((p: any) => {
 [2m 84[0m | [33;1m|[0m         total += Number(p.amount) || 0;
 [2m 85[0m | [33;1m|[0m         byStatus[p.status] = (byStatus[p.status] || 0) + 1;
 [2m 86[0m | [33;1m|[0m         byMethod[p.method || "other"] = (byMethod[p.method || "other"] || 0) + 1;
 [2m 87[0m | [33;1m|[0m         if (p.email) topCustomers[p.email] = (topCustomers[p.email] || 0) + 1;
 [2m 88[0m | [33;1m|[0m       });
 [2m 89[0m | [33;1m|[0m       const topCustomersArr = Object.entries(topCustomers).sort((a, b) => b[1] - a[1]).slice(0, 3);
 [2m 90[0m | [33;1m|[0m       return { total, byStatus, byMethod, topCustomersArr };
 [2m 91[0m | [33;1m|[0m     }, [payments]);
 [2m 92[0m | [33;1m|[0m   
 [2m 93[0m | [33;1m|[0m     return (
 [2m 94[0m | [33;1m|[0m       <div className="px-1 sm:px-2 md:px-4">
 [2m 95[0m | [33;1m|[0m         <h1 className="text-2xl font-bold mb-2 text-black">Payment Management</h1>
 [2m 96[0m | [33;1m|[0m         {/* Analytics */}
 [2m 97[0m | [33;1m|[0m         <div className="mb-4 grid grid-cols-1 gap-2 sm:gap-4 md:grid-cols-4">
 [2m 98[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m 99[0m | [33;1m|[0m             <div className="text-xs text-gray-500">Total Payments</div>
 [2m100[0m | [33;1m|[0m             <div className="text-xl font-bold text-green-700">â‚¦{analytics.total.toLocaleString()}</div>
 [2m101[0m | [33;1m|[0m           </div>
 [2m102[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m103[0m | [33;1m|[0m             <div className="text-xs text-gray-500">By Status</div>
 [2m104[0m | [33;1m|[0m             <ul className="text-sm">
 [2m105[0m | [33;1m|[0m               {Object.entries(analytics.byStatus).map(([status, count]) => (
 [2m106[0m | [33;1m|[0m                 <li key={status}><span className="capitalize">{status}</span>: <span className="font-bold">{count}</span></li>
 [2m107[0m | [33;1m|[0m               ))}
 [2m108[0m | [33;1m|[0m             </ul>
 [2m109[0m | [33;1m|[0m           </div>
 [2m110[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m111[0m | [33;1m|[0m             <div className="text-xs text-gray-500">By Method</div>
 [2m112[0m | [33;1m|[0m             <ul className="text-sm">
 [2m113[0m | [33;1m|[0m               {Object.entries(analytics.byMethod).map(([method, count]) => (
 [2m114[0m | [33;1m|[0m                 <li key={method}><span className="capitalize">{method}</span>: <span className="font-bold">{count}</span></li>
 [2m115[0m | [33;1m|[0m               ))}
 [2m116[0m | [33;1m|[0m             </ul>
 [2m117[0m | [33;1m|[0m           </div>
 [2m118[0m | [33;1m|[0m           <div className="bg-white rounded-lg shadow p-3 sm:p-4 border">
 [2m119[0m | [33;1m|[0m             <div className="text-xs text-gray-500">Top Customers</div>
 [2m120[0m | [33;1m|[0m             <ul className="text-sm">
 [2m121[0m | [33;1m|[0m               {analytics.topCustomersArr.map(([email, count]) => (
 [2m122[0m | [33;1m|[0m                 <li key={email}>{email}: <span className="font-bold">{count}</span></li>
 [2m123[0m | [33;1m|[0m               ))}
 [2m124[0m | [33;1m|[0m             </ul>
 [2m125[0m | [33;1m|[0m           </div>
 [2m126[0m | [33;1m|[0m         </div>
 [2m127[0m | [33;1m|[0m         {/* Filters/Search */}
 [2m128[0m | [33;1m|[0m         <div className="mb-4 flex flex-col gap-2 sm:flex-row sm:gap-4">
 [2m129[0m | [33;1m|[0m           <input
 [2m130[0m | [33;1m|[0m             type="text"
 [2m131[0m | [33;1m|[0m             placeholder="Search by email, reference, or order ID"
 [2m132[0m | [33;1m|[0m             className="border rounded-lg px-3 py-2 text-gray-900 bg-white placeholder:text-gray-400 w-full sm:w-72"
 [2m133[0m | [33;1m|[0m             value={search}
 [2m134[0m | [33;1m|[0m             onChange={e => setSearch(e.target.value)}
 [2m135[0m | [33;1m|[0m           />
 [2m136[0m | [33;1m|[0m           <select
 [2m137[0m | [33;1m|[0m             className="border rounded-lg px-3 py-2 text-gray-900 bg-white w-full sm:w-48"
 [2m138[0m | [33;1m|[0m             value={filter.status}
 [2m139[0m | [33;1m|[0m             onChange={e => setFilter(f => ({ ...f, status: e.target.value }))}
 [2m140[0m | [33;1m|[0m           >
 [2m141[0m | [33;1m|[0m             <option value="">All Statuses</option>
 [2m142[0m | [33;1m|[0m             <option value="pending">Pending</option>
 [2m143[0m | [33;1m|[0m             <option value="success">Success</option>
 [2m144[0m | [33;1m|[0m             <option value="failed">Failed</option>
 [2m145[0m | [33;1m|[0m           </select>
 [2m146[0m | [33;1m|[0m         </div>
 [2m147[0m | [33;1m|[0m         {/* Table */}
 [2m148[0m | [33;1m|[0m         <div className="bg-white rounded-xl shadow p-2 sm:p-4 md:p-6 border border-blue_gray-100 overflow-x-auto">
 [2m149[0m | [33;1m|[0m           {isLoading ? (
 [2m150[0m | [33;1m|[0m             <div className="text-gray-900 text-base">Loading payments...</div>
 [2m151[0m | [33;1m|[0m           ) : error ? (
 [2m152[0m | [33;1m|[0m             <div className="text-red-600 mb-2">Failed to load payments</div>
 [2m153[0m | [33;1m|[0m           ) : payments.length === 0 ? (
 [2m154[0m | [33;1m|[0m             <div className="text-gray-700">No payments found.</div>
 [2m155[0m | [33;1m|[0m           ) : (
 [2m156[0m | [33;1m|[0m             <div className="w-full overflow-x-auto">
 [2m157[0m | [33;1m|[0m               <table className="min-w-[700px] w-full text-left text-sm text-gray-900">
 [2m158[0m | [33;1m|[0m                 <thead>
 [2m159[0m | [33;1m|[0m                   <tr>
 [2m160[0m | [33;1m|[0m                     <th className="py-2 font-bold">Reference</th>
 [2m161[0m | [33;1m|[0m                     <th className="py-2 font-bold">Order</th>
 [2m162[0m | [33;1m|[0m                     <th className="py-2 font-bold">Customer</th>
 [2m163[0m | [33;1m|[0m                     <th className="py-2 font-bold">Amount</th>
 [2m164[0m | [33;1m|[0m                     <th className="py-2 font-bold">Method</th>
 [2m165[0m | [33;1m|[0m                     <th className="py-2 font-bold">Status</th>
 [2m166[0m | [33;1m|[0m                     <th className="py-2 font-bold">Date</th>
 [2m167[0m | [33;1m|[0m                     <th className="py-2 font-bold">Actions</th>
 [2m168[0m | [33;1m|[0m                   </tr>
 [2m169[0m | [33;1m|[0m                 </thead>
 [2m170[0m | [33;1m|[0m                 <tbody>
 [2m171[0m | [33;1m|[0m                   {payments.map((pay: any) => (
 [2m172[0m | [33;1m|[0m                     <tr key={pay.reference} className="border-t">
 [2m173[0m | [33;1m|[0m                       <td className="py-2">{pay.reference}</td>
 [2m174[0m | [33;1m|[0m                       <td className="py-2">
 [2m175[0m | [33;1m|[0m                         {pay.order_id ? (
 [2m176[0m | [33;1m|[0m                           <a href={`/admin/orders?search=${pay.order_id}`} className="underline text-blue-700 hover:text-blue-900" title="View order">{pay.order_id}</a>
 [2m177[0m | [33;1m|[0m                         ) : "-"}
 [2m178[0m | [33;1m|[0m                       </td>
 [2m179[0m | [33;1m|[0m                       <td className="py-2">
 [2m180[0m | [33;1m|[0m                         {pay.email ? (
 [2m181[0m | [33;1m|[0m                           <a href={`/admin/customers?search=${pay.email}`} className="underline text-blue-700 hover:text-blue-900" title="View customer">{pay.email}</a>
 [2m182[0m | [33;1m|[0m                         ) : "-"}
 [2m183[0m | [33;1m|[0m                       </td>
 [2m184[0m | [33;1m|[0m                       <td className="py-2">â‚¦{Number(pay.amount).toLocaleString()}</td>
 [2m185[0m | [33;1m|[0m                       <td className="py-2">{pay.method || "-"}</td>
 [2m186[0m | [33;1m|[0m                       <td className="py-2 capitalize">{pay.status}</td>
 [2m187[0m | [33;1m|[0m                       <td className="py-2">{pay.created_at ? new Date(pay.created_at).toLocaleString() : "-"}</td>
 [2m188[0m | [33;1m|[0m                       <td className="py-2">
 [2m189[0m | [33;1m|[0m                         <button className="underline text-blue-700 hover:text-blue-900" onClick={() => setSelected(pay)}>View</button>
 [2m190[0m | [33;1m|[0m                       </td>
 [2m191[0m | [33;1m|[0m                     </tr>
 [2m192[0m | [33;1m|[0m                   ))}
 [2m193[0m | [33;1m|[0m                 </tbody>
 [2m194[0m | [33;1m|[0m               </table>
 [2m195[0m | [33;1m|[0m             </div>
 [2m196[0m | [33;1m|[0m           )}
 [2m197[0m | [33;1m|[0m         </div>
 [2m198[0m | [33;1m|[0m         {/* Payment Details Modal */}
 [2m199[0m | [33;1m|[0m         {selected && (
 [2m200[0m | [33;1m|[0m           <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 px-2 sm:px-0">
 [2m201[0m | [33;1m|[0m             <div className="bg-white rounded-xl shadow-lg p-2 sm:p-4 md:p-6 w-full max-w-xl relative">
 [2m202[0m | [33;1m|[0m               <button
 [2m203[0m | [33;1m|[0m                 className="absolute top-2 right-2 text-gray-700 hover:text-black text-2xl font-bold"
 [2m204[0m | [33;1m|[0m                 onClick={() => setSelected(null)}
 [2m205[0m | [33;1m|[0m                 aria-label="Close payment details"
 [2m206[0m | [33;1m|[0m               >
 [2m207[0m | [33;1m|[0m                 &times;
 [2m208[0m | [33;1m|[0m               </button>
 [2m209[0m | [33;1m|[0m               <h2 className="text-xl font-bold mb-2 text-black">Payment Details</h2>
 [2m210[0m | [33;1m|[0m               <div className="mb-2 text-gray-900 text-sm sm:text-base">
 [2m211[0m | [33;1m|[0m                 <strong>Reference:</strong> {selected.reference}<br />
 [2m212[0m | [33;1m|[0m                 <strong>Order:</strong> {selected.order_id ? (
 [2m213[0m | [33;1m|[0m                   <a href={`/admin/orders?search=${selected.order_id}`} className="underline text-blue-700 hover:text-blue-900">{selected.order_id}</a>
 [2m214[0m | [33;1m|[0m                 ) : "-"}<br />
 [2m215[0m | [33;1m|[0m                 <strong>Customer:</strong> {selected.email ? (
 [2m216[0m | [33;1m|[0m                   <a href={`/admin/customers?search=${selected.email}`} className="underline text-blue-700 hover:text-blue-900">{selected.email}</a>
 [2m217[0m | [33;1m|[0m                 ) : "-"}<br />
 [2m218[0m | [33;1m|[0m                 <strong>Amount:</strong> â‚¦{Number(selected.amount).toLocaleString()}<br />
 [2m219[0m | [33;1m|[0m                 <strong>Method:</strong> {selected.method || "-"}<br />
 [2m220[0m | [33;1m|[0m                 <strong>Status:</strong> <span className="capitalize">{selected.status}</span><br />
 [2m221[0m | [33;1m|[0m                 <strong>Date:</strong> {selected.created_at ? new Date(selected.created_at).toLocaleString() : "-"}<br />
 [2m222[0m | [33;1m|[0m                 {selected.metadata && (
 [2m223[0m | [33;1m|[0m                   <>
 [2m224[0m | [33;1m|[0m                     <strong>Metadata:</strong> <pre className="bg-gray-100 rounded p-2 text-xs overflow-x-auto">{JSON.stringify(selected.metadata, null, 2)}</pre>
 [2m225[0m | [33;1m|[0m                   </>
 [2m226[0m | [33;1m|[0m                 )}
 [2m227[0m | [33;1m|[0m               </div>
 [2m228[0m | [33;1m|[0m             </div>
 [2m229[0m | [33;1m|[0m           </div>
 [2m230[0m | [33;1m|[0m         )}
 [2m231[0m | [33;1m|[0m       </div>
 [2m232[0m | [33;1m|[0m     );
 [2m233[0m | [33;1m|[0m[33;1m-[0m[33;1m>[0m }
     : [33;1m`[0m[33;1m---[0m[33;1m-[0m [33;1mexported more than once[0m
     `----

Error: 
  [36m>[0m Exported identifiers must be unique

  [31mx[0m The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:54:1]
 [2m54[0m |     </div>
 [2m55[0m |   );
 [2m56[0m | }
 [2m57[0m | "use client";
    : [31;1m^^^^^^^^^^^^^[0m
 [2m58[0m | import { useState, useMemo } from "react";
 [2m59[0m | import { useQuery } from "@tanstack/react-query";
    `----

  [31mx[0m You're importing a component that needs useState. It only works in a Client Component but none of its parents are marked with "use client", so they're Server Components by default.
  [31m|[0m Learn more: https://nextjs.org/docs/getting-started/react-essentials
  [31m|[0m 
  [31m|[0m 
    ,-[[36;1;4m/Users/user/Desktop/thecoachamara/src/app/admin/payments/page.tsx[0m:55:1]
 [2m55[0m |   );
 [2m56[0m | }
 [2m57[0m | "use client";
 [2m58[0m | import { useState, useMemo } from "react";
    : [31;1m         ^^^^^^^^[0m
 [2m59[0m | import { useQuery } from "@tanstack/react-query";
 [2m60[0m | 
 [2m61[0m | const fetchPayments = async (params: Record<string, string>) => {
    `----

Import trace for requested module:
./src/app/admin/payments/page.tsx
 GET /admin/payments 500 in 102ms
 â—‹ Compiling /admin/payments ...
 âœ“ Compiled /_not-found in 678ms (946 modules)
 âš  Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 GET /_next/static/webpack/036e5ffa2df02dd9.webpack.hot-update.json 404 in 604ms
 âœ“ Compiled /admin/payments in 205ms (989 modules)
 âš  Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 GET /_next/static/webpack/036e5ffa2df02dd9.webpack.hot-update.json 404 in 67ms
 GET /admin/payments 200 in 267ms
 GET /admin/payments 200 in 17ms
 âœ“ Compiled /api/auth/[...nextauth] in 447ms (558 modules)
 âœ“ Compiled (579 modules)
 GET /api/auth/session 200 in 748ms
 GET /api/auth/session 200 in 3ms
 GET /api/payments 200 in 1595ms
 GET /api/payments 200 in 3706ms
 âœ“ Compiled in 1119ms (1000 modules)
 âœ“ Compiled in 293ms (541 modules)
 âœ“ Compiled in 217ms (541 modules)
<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename '/Users/user/Desktop/thecoachamara/.next/cache/webpack/client-development/0.pack.gz_' -> '/Users/user/Desktop/thecoachamara/.next/cache/webpack/client-development/0.pack.gz'
 âœ“ Compiled in 1151ms (541 modules)
 âœ“ Compiled in 493ms (541 modules)
 âœ“ Compiled in 289ms (541 modules)
<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename '/Users/user/Desktop/thecoachamara/.next/cache/webpack/client-development/0.pack.gz_' -> '/Users/user/Desktop/thecoachamara/.next/cache/webpack/client-development/0.pack.gz'
 âœ“ Compiled in 622ms (541 modules)
 âœ“ Compiled in 391ms (541 modules)
 âœ“ Compiled in 413ms (541 modules)
<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename '/Users/user/Desktop/thecoachamara/.next/cache/webpack/client-development/3.pack.gz_' -> '/Users/user/Desktop/thecoachamara/.next/cache/webpack/client-development/3.pack.gz'
 âœ“ Compiled in 298ms (541 modules)
<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename '/Users/user/Desktop/thecoachamara/.next/cache/webpack/client-development/0.pack.gz_' -> '/Users/user/Desktop/thecoachamara/.next/cache/webpack/client-development/0.pack.gz'
 âœ“ Compiled in 310ms (541 modules)
<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, lstat '/Users/user/Desktop/thecoachamara/.next/server/app/api/orders/notify'
<w> [webpack.cache.PackFileCacheStrategy/webpack.FileSystemInfo] Resolving '../../../../.next/server/app/api/orders/notify/route' in /Users/user/Desktop/thecoachamara/node_modules/next/dist/server for build dependencies doesn't lead to expected result '/Users/user/Desktop/thecoachamara/.next/server/app/api/orders/notify/route.js', but to 'Error: Can't resolve '../../../../.next/server/app/api/orders/notify/route' in '/Users/user/Desktop/thecoachamara/node_modules/next/dist/server'' instead. Resolving dependencies are ignored for this path.
<w>  at resolve commonjs file ../../../../.next/server/app/api/orders/notify/route (expected /Users/user/Desktop/thecoachamara/.next/server/app/api/orders/notify/route.js)
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/server/require.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/server/require.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/server/load-components.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/server/load-components.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/utils.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/utils.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/compiled/loader-runner/LoaderRunner.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/compiled/loader-runner/LoaderRunner.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/compiled/webpack/bundle5.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/compiled/webpack/bundle5.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/compiled/webpack/webpack.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/compiled/webpack/webpack.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/plugins/define-env-plugin.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/plugins/define-env-plugin.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack-config.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack-config.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/loaders/next-swc-loader.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/loaders/next-swc-loader.js
<w>  at resolve commonjs /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/loaders/next-swc-loader.js
 âœ“ Compiled in 262ms (541 modules)
<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, lstat '/Users/user/Desktop/thecoachamara/.next/server/app/api/orders/notify'
<w> [webpack.cache.PackFileCacheStrategy/webpack.FileSystemInfo] Resolving '../../../../.next/server/app/api/orders/notify/route' in /Users/user/Desktop/thecoachamara/node_modules/next/dist/server for build dependencies doesn't lead to expected result '/Users/user/Desktop/thecoachamara/.next/server/app/api/orders/notify/route.js', but to 'Error: Can't resolve '../../../../.next/server/app/api/orders/notify/route' in '/Users/user/Desktop/thecoachamara/node_modules/next/dist/server'' instead. Resolving dependencies are ignored for this path.
<w>  at resolve commonjs file ../../../../.next/server/app/api/orders/notify/route (expected /Users/user/Desktop/thecoachamara/.next/server/app/api/orders/notify/route.js)
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/server/require.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/server/require.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/server/load-components.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/server/load-components.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/utils.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/utils.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/compiled/loader-runner/LoaderRunner.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/compiled/loader-runner/LoaderRunner.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/compiled/webpack/bundle5.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/compiled/webpack/bundle5.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/compiled/webpack/webpack.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/compiled/webpack/webpack.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/plugins/define-env-plugin.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/plugins/define-env-plugin.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/swc/index.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/swc/index.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/analysis/parse-module.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/analysis/parse-module.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/analysis/get-page-static-info.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/analysis/get-page-static-info.js
<w>  at file dependencies /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/loaders/next-flight-client-module-loader.js
<w>  at file /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/loaders/next-flight-client-module-loader.js
<w>  at resolve commonjs /Users/user/Desktop/thecoachamara/node_modules/next/dist/build/webpack/loaders/next-flight-client-module-loader.js
 âœ“ Compiled in 835ms (541 modules)
